package com.chengxin.adapter;import java.util.Date;import java.util.List;import com.chengxin.R;import com.chengxin.Entity.Order;import com.chengxin.Entity.StatusMenu;import com.chengxin.adapter.ShopOrderAdapter.ViewHolder;import com.chengxin.global.FeatureFunction;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.TextView;import android.widget.CompoundButton.OnCheckedChangeListener;public class ShopSettleAdapter extends BaseAdapter {	public interface OnSettleItemCheckListener {		void onItemCheckChanged(View v, int position, boolean checked);	}		private Context mContext;	private List<Order> list;	private LayoutInflater mInflater;	private OnSettleItemCheckListener listener;		public void setListener(OnSettleItemCheckListener listener) {		this.listener = listener;	}	public ShopSettleAdapter(Context mContext, List<Order> list) {		super();		this.mContext = mContext;		this.list = list;		mInflater = LayoutInflater.from(mContext); 	}	@Override	public int getCount() {		return list.size();	}	@Override	public Object getItem(int position) {		return list.get(position);	}	@Override	public long getItemId(int position) {		return Integer.valueOf(list.get(position).id).longValue();	}	@Override	public View getView(final int position, View convertView, ViewGroup parent) {		ViewHolder holder;		if (convertView == null) {			convertView = mInflater.inflate(R.layout.shop_settle_item, null);			holder = new ViewHolder();			holder.mOrderName   = (TextView)convertView.findViewById(R.id.order_number);			holder.mCheck      	= (CheckBox)convertView.findViewById(R.id.chk_select);			holder.mOrderPrice  = (TextView)convertView.findViewById(R.id.order_price);			holder.mOrderDate 	= (TextView)convertView.findViewById(R.id.order_date);			convertView.setTag(holder);		}else{			holder = (ViewHolder) convertView.getTag();		}		final Order item = list.get(position);			if (item.ordersn != null && !item.ordersn.equals("") && !item.ordersn.equals("null"))			holder.mOrderName.setText(String.format("订单: %s", item.ordersn));		else			holder.mOrderName.setText("订单:");					holder.mOrderPrice.setText(String.format("金额: %.2f", item.totalPrice));		long overTime = 0;				if (item.overtime != null && !item.overtime.equals("") && !item.overtime.equals("null")) {			overTime = Long.parseLong(item.overtime);		}		Date createDate = new Date(overTime * 1000);		holder.mOrderDate.setText(String.format("下单时间: %s", FeatureFunction.getDateString(mContext, createDate, 1)));		holder.mCheck.setOnCheckedChangeListener(new OnCheckedChangeListener() {						@Override			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {				item.selected = isChecked;								if (listener != null) {					listener.onItemCheckChanged(buttonView, position, isChecked);				}			}		});				return convertView;	}	public final static class ViewHolder {		public CheckBox mCheck;		public TextView mOrderName;		public TextView mOrderPrice; 		public TextView mOrderDate;		@Override		public int hashCode() {			return this.mOrderDate.hashCode() + this.mOrderName.hashCode()					 + this.mCheck.hashCode() + this.mOrderPrice.hashCode();		}	}}