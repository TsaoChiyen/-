package com.chengxin.adapter;import java.util.List;import com.chengxin.R;import com.chengxin.Entity.ShopInfoItem;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.RelativeLayout;import android.widget.TextView;public class ShopInfoAdapter extends BaseAdapter {	public static final int SETTING_BANK = 0x101;	public static final int SETTING_PASSWORD = 0x102;	public static final int ADD_SERVICE = 0x103;	public static final int DELETE_SERVICE = 0x104;		private LayoutInflater mInflater;      private List<ShopInfoItem> listData;      private List<ShopInfoItem> listHeader;       private Context mContext;	private OnShopInfoClickListener mListener = null;		public interface OnShopInfoClickListener {		void onClick(String action, ShopInfoItem item, int position);	}		public void setOnShopInfoClickListener (OnShopInfoClickListener listener) {		if (listener != null) {			mListener = listener;		}	}	public ShopInfoAdapter(Context context, List<ShopInfoItem> data, List<ShopInfoItem> header) {		mContext = context;		listData = data;		listHeader = header;		mInflater = LayoutInflater.from(mContext);  	}	public List<ShopInfoItem> getListData() {		return listData;	}		@Override	public int getCount() {		return listData.size();	}	@Override	public Object getItem(int position) {		return listData.get(position);	}	@Override	public long getItemId(int position) {		return position;	}	@Override	public View getView(final int position, View convertView, ViewGroup parent) {		ViewHolder holder;//		if (convertView == null) {			if (listHeader.contains(listData.get(position))) {				convertView = mInflater.inflate(R.layout.shop_info_header, null);			} else {				convertView = mInflater.inflate(R.layout.shop_info_item, null);			}			holder = new ViewHolder();			holder.mTitle   = (TextView) convertView.findViewById(R.id.title);			holder.mContent = (TextView) convertView.findViewById(R.id.content);			holder.mButtonLayout = (RelativeLayout) convertView.findViewById(R.id.btn_layout);			holder.mButton = (TextView) convertView.findViewById(R.id.button);//			convertView.setTag(holder);//		}else{//			holder = (ViewHolder) convertView.getTag();//		}		ShopInfoItem item = listData.get(position);		holder.mTitle.setText(item.title);				if (item.content != null && item.content.length() > 0 && !item.content.equals("null"))			holder.mContent.setText(item.content);		else 			holder.mContent = null;				if (item.action != null && item.action.length() > 0) {			holder.mButtonLayout.setVisibility(View.VISIBLE);			if (item.action.contains("Add")) {				holder.mButton.setText("添加");			} else if (item.action.contains("Setting")) {				holder.mButton.setText("设置");			} else if (item.action.contains("Delete")) {				holder.mButton.setText("X");			} else {				holder.mButtonLayout.setVisibility(View.GONE);			}						if (holder.mButtonLayout.getVisibility() == View.VISIBLE) {				holder.mButtonLayout.setOnClickListener(new OnClickListener() {										@Override					public void onClick(View v) {						if (ShopInfoAdapter.this.mListener != null) {							ShopInfoItem item = listData.get(position);							mListener.onClick(item.action, item, position);						}					}				});			}		} else {			holder.mButtonLayout.setVisibility(View.GONE);		}		return convertView;	}	@Override	public boolean isEnabled(int position) {		ShopInfoItem item = listData.get(position);		return item.enabled;	}	final static class ViewHolder {		TextView mTitle;		TextView mContent; 		RelativeLayout mButtonLayout;		TextView mButton;		@Override		public int hashCode() {			return this.mTitle.hashCode() + mContent.hashCode()					+ mButtonLayout.hashCode()+ mButton.hashCode();		}	}}