package com.chengxin.adapter;import java.util.Date;import java.util.List;import com.chengxin.R;import com.chengxin.Entity.Goods;import com.chengxin.Entity.Order;import com.chengxin.Entity.StatusMenu;import com.chengxin.global.FeatureFunction;import com.chengxin.global.ImageLoader;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;public class OrderAdapter extends BaseAdapter {	private List<Order> mList;	private LayoutInflater mInflater;	private Context mContext;	private ImageLoader mImageLoader  = new ImageLoader();		public OrderAdapter(Context context, List<Order> list) {		super();		mList = list;		mContext = context;		mInflater = LayoutInflater.from(context); 	}	@Override	public int getCount() {		return mList.size();	}	@Override	public Object getItem(int position) {		return mList.get(position);	}	@Override	public long getItemId(int position) {		return Integer.valueOf(mList.get(position).id).longValue();	}	@Override	public View getView(int position, View convertView, ViewGroup parent) {		ViewHolder holder;		if (convertView == null) {			convertView = mInflater.inflate(R.layout.services_order_item, null);			holder = new ViewHolder();			holder.mLogoIcon    = (ImageView)convertView.findViewById(R.id.logo_icon);			holder.mOrderSumary = (TextView)convertView.findViewById(R.id.order_sumary);			holder.mOrderPrice  = (TextView)convertView.findViewById(R.id.order_price);			holder.mOrderDate 	= (TextView)convertView.findViewById(R.id.order_date);			holder.mOrderStatus = (TextView)convertView.findViewById(R.id.order_status);			convertView.setTag(holder);		}else{			holder = (ViewHolder) convertView.getTag();		}		final Order item = mList.get(position);				if (item.goods != null && item.goods.size() > 0) {			Goods goods = item.goods.get(0);						if (goods.logo != null) {				mImageLoader.getBitmap(mContext, holder.mLogoIcon, null, goods.logo, 0, false, true, false);			}			if (goods.name != null && !goods.name.equals("") && !goods.name.equals("null")) {				holder.mOrderSumary.setText(String.format("%s%s %d件商品", goods.name, item.goods.size() > 1 ? "等":"", item.totalCount));			}		}				holder.mOrderPrice.setText(String.format("%.2f", item.totalPrice));		Date createDate = new Date(Long.parseLong(item.createtime) * 1000);		holder.mOrderDate.setText(FeatureFunction.getDateString(mContext, createDate, 1));				if (item.status != null && !item.status.equals("") && !item.status.equals("null")) {			if (Integer.parseInt(item.status) < 6) {				holder.mOrderStatus.setText(StatusMenu.getStatusStringById(item.status));			}		}		return convertView;	}		public final static class ViewHolder {		public ImageView mLogoIcon;		public TextView mOrderSumary;		public TextView mOrderPrice; 		public TextView mOrderDate;		public TextView mOrderStatus;		@Override		public int hashCode() {			return this.mLogoIcon.hashCode() + this.mOrderSumary.hashCode()					+ this.mOrderPrice.hashCode() + this.mOrderDate.hashCode()					+ this.mOrderStatus.hashCode();		}	}}