package com.chengxin.adapter;import java.util.List;import com.chengxin.R;import com.chengxin.Entity.CheckItem;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.TextView;import android.widget.CompoundButton.OnCheckedChangeListener;public class CheckListAdapter extends BaseAdapter {		private List<CheckItem> mList;	private LayoutInflater mInflater;	public CheckListAdapter(Context context, List<CheckItem> list) {		super();		mList = list;		mInflater = LayoutInflater.from(context); 	}	@Override	public int getCount() {		return mList.size();	}	@Override	public Object getItem(int position) {		return mList.get(position);	}	@Override	public long getItemId(int position) {		return mList.get(position).id;	}	@Override	public View getView(final int position, View convertView, ViewGroup parent) {		ViewHolder holder;		if(convertView == null || ((ViewHolder)convertView.getTag()).position != position) {			convertView = mInflater.inflate(R.layout.merchant_category_item, null);			holder = new ViewHolder();			holder.position = position;			holder.name = (TextView)convertView.findViewById(R.id.menu_name);			holder.checkbox = (CheckBox)convertView.findViewById(R.id.checkBox1);			convertView.setTag(holder);		}else{			holder = (ViewHolder) convertView.getTag();		}		final CheckItem item = mList.get(position);				holder.name.setText(item.name);		holder.checkbox.setEnabled(false);		holder.checkbox.setChecked(item.isChecked);		holder.checkbox.setEnabled(true);		holder.checkbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {						@Override			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {				item.isChecked = isChecked;			}		});		return convertView;	}		public final static class ViewHolder {		public TextView name;		public CheckBox checkbox;		public int position;		@Override		public int hashCode() {			return this.name.hashCode() + this.checkbox.hashCode();		}	}}