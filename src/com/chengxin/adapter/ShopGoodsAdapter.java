package com.chengxin.adapter;import java.util.List;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.chengxin.R;import com.chengxin.Entity.Goods;import com.chengxin.global.ImageLoader;public class ShopGoodsAdapter extends BaseAdapter {	public static final int SHOP_GOODS_EDIT = 0x3001;	public static final int SHOP_GOODS_DELETE = 0x3002;		private List < Goods > listData;	private LayoutInflater mInflater;	private Context mContext;	private ImageLoader mImageLoader;	private OnShopGoodsClickListener mListener;	public interface OnShopGoodsClickListener {		void onClick(int action, Goods item, int position);	}	public void setOnShopGoodsClickListener(OnShopGoodsClickListener l) {		mListener = l;	}		public ShopGoodsAdapter(Context context, List<Goods> listData) {		mContext = context;		this.listData = listData;		mInflater = LayoutInflater.from(mContext); 		mImageLoader = new ImageLoader();	}	@Override	public int getCount() {		return listData.size();	}	@Override	public Object getItem(int position) {		return listData.get(position);	}	@Override	public long getItemId(int position) {		return Integer.valueOf(listData.get(position).id).intValue(); 	}		@Override	public View getView(final int position, View convertView, ViewGroup parent) {		ViewHolder holder;		if (convertView == null) {			convertView = mInflater.inflate(R.layout.shop_goods_item, null);			holder = new ViewHolder();			holder.mImage     = (ImageView)convertView.findViewById(R.id.goods_icon);			holder.mBarCode   = (TextView) convertView.findViewById(R.id.bar_code);			holder.mGoodsName = (TextView) convertView.findViewById(R.id.goods_name);			holder.mPrice 	  = (TextView) convertView.findViewById(R.id.goods_price);			holder.mBtnLayout = (LinearLayout)convertView.findViewById(R.id.btn_layout);			holder.mBtnEdit   = (Button)convertView.findViewById(R.id.btn_edit);			holder.mBtnDelete = (Button)convertView.findViewById(R.id.btn_del);			convertView.setTag(holder);		}else{			holder = (ViewHolder) convertView.getTag();		}		final Goods item = listData.get(position);				if (item.barcode != null && !item.barcode.equals("") && !item.barcode.equals("null"))			holder.mBarCode.setText(String.format("条码: %s", item.barcode));		else			holder.mBarCode.setText("条码:");							if (item.name != null && !item.name.equals("") && !item.name.equals("null"))			holder.mGoodsName.setText(item.name);				holder.mPrice.setText(String.format("价格: %s", String.valueOf(item.price)));				if(item.pictureList.size() > 0) {			String icon = item.pictureList.get(0).smallUrl; 			mImageLoader.getBitmap(mContext, holder.mImage, null, icon, 0, false, true,false);		}		holder.mBtnEdit.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {				if (mListener != null) {					mListener.onClick(SHOP_GOODS_EDIT, item, position);				}			}		});				holder.mBtnDelete.setOnClickListener(new OnClickListener() {						@Override			public void onClick(View v) {				if (mListener != null) {					mListener.onClick(SHOP_GOODS_DELETE, item, position);				}			}		});		return convertView;	}	public final static class ViewHolder {		public ImageView mImage;		public TextView mBarCode;		public TextView mGoodsName; 		public TextView mPrice;		public LinearLayout mBtnLayout;		public Button mBtnEdit;		public Button mBtnDelete;		@Override		public int hashCode() {			return this.mBarCode.hashCode() + this.mGoodsName.hashCode()					+ this.mPrice.hashCode() + this.mImage.hashCode()					+ this.mBtnLayout.hashCode() + this.mBtnEdit.hashCode()					+ this.mBtnDelete.hashCode();		}	}}