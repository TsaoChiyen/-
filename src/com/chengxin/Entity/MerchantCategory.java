package com.chengxin.Entity;import java.io.Serializable;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import com.chengxin.org.json.JSONArray;import com.chengxin.org.json.JSONException;import com.chengxin.org.json.JSONObject;public class MerchantCategory implements Serializable {	/**	 * 	 */	private static final long serialVersionUID = 1L;		public int id;	public String logo;	public int merchantType;	public String name;	public int vieworder;	private static HashMap <String, List<MerchantCategory> > categories = new HashMap<String, List<MerchantCategory> >();		public static boolean hasData() {		return categories.size() > 0;	}		public MerchantCategory(int id, String logo, String name) {		super();		this.id = id;		this.logo = logo;		this.name = name;	}	public MerchantCategory() {		super();	}	public MerchantCategory(String reqString) {		super();		if(reqString == null || reqString.equals("")){			return;		}				try {			JSONObject obj = new JSONObject(reqString);						if(!obj.isNull("state")){				WeiYuanState state = new WeiYuanState(obj.getJSONObject("state"));							if(state != null && state.code == 0){					if(!obj.isNull("data")){						String dataString = obj.getString("data");												if((dataString != null && !dataString.equals("")) && dataString.startsWith("{")) {							JSONObject data = obj.getJSONObject("data");							categories.clear();							for (int i = 1; i <= 4; i++) {								JSONArray array = data.getJSONArray("" + i);								List<MerchantCategory> list = new ArrayList<MerchantCategory>();								if (array != null && array.length() > 0) {									for (int j = 0; j < array.length(); j++) {										list.add(new MerchantCategory(array												.getJSONObject(j)));									}								}								categories.put("" + i, list);							}								}					}				}			}		} catch (JSONException e) {			e.printStackTrace();		}	}		private MerchantCategory(JSONObject obj) throws JSONException{		if(obj == null  || obj.equals("")){			return;		}		id = obj.getInt("id");		logo = obj.getString("logo");		name = obj.getString("name");		merchantType = obj.getInt("type");		vieworder = obj.getInt("vieworder");	}	/**	 * @return the menuList	 */	public static List<MerchantCategory> getMenuList(int iType) {		return categories.get("" + iType);	}//	//	public static String getNameById(int id) {//		if (menuList.size() > 0) {//			for (int i = 0; i < menuList.size(); i++) {//				MerchantCategory item = menuList.get(i);//				//				if (item.id == id) {//					return item.name;//				}//			}//		}//		//		return null;//	}////	public static MerchantCategory getItemById(int id) {//		if (menuList.size() > 0) {//			for (int i = 0; i < menuList.size(); i++) {//				MerchantCategory item = menuList.get(i);//				//				if (item.id == id) {//					return item;//				}//			}//		}//		//		return null;//	}////	public static int getIdByName(String name) {//		if (menuList.size() > 0) {//			for (int i = 0; i < menuList.size(); i++) {//				MerchantCategory item = menuList.get(i);//				//				if (item.name.equals(name)) {//					return item.id;//				}//			}//		}//		//		return 0;//	}////	public static MerchantCategory getItemByName(String name) {//		if (menuList.size() > 0) {//			for (int i = 0; i < menuList.size(); i++) {//				MerchantCategory item = menuList.get(i);//				//				if (item.name.equals(name)) {//					return item;//				}//			}//		}//		//		return null;//	}////	public static List<PopItem> getPopMenuList() {//		List<PopItem> popList = new ArrayList<PopItem>();////		PopItem pop = new PopItem(0, "全部商品", "category00");//		popList.add(pop);//		//		for (int i = 0; i < menuList.size(); i++) {//			MerchantCategory item = menuList.get(i);//			pop = new PopItem(item.id, item.name, String.format("category%02d", item.id));//			popList.add(pop);//		}//		//		return popList;//	}//	public static String getName(int type, int id) {		List<MerchantCategory> list = categories.get("" + type);		for (int i = 0; i < list.size(); i++) {			MerchantCategory item = list.get(i);						if (item.id == id) {				return item.name;			}		}				return "";	}	public static List<PopItem> getPopMenuList(int merchantType) {		List<MerchantCategory> menuList = MerchantCategory.getMenuList(merchantType);		if (menuList == null) return null;				List<PopItem> popList = new ArrayList<PopItem>();		PopItem pop = new PopItem(0, "全部", "category00");		popList.add(pop);				for (int i = 0; i < menuList.size(); i++) {			MerchantCategory item = menuList.get(i);			pop = new PopItem(item.id, item.name);			popList.add(pop);		}				return popList;	}	public static List<CheckItem> getCheckMenuList(int type) {		List<MerchantCategory> list = MerchantCategory.getMenuList(type);		List<CheckItem> mList = new ArrayList<CheckItem>();				if (list != null && list.size() > 0) {			for (MerchantCategory item : list) {				CheckItem mItem = new CheckItem(item.id, item.name);				mList.add(mItem);			}		}				return mList;	}}