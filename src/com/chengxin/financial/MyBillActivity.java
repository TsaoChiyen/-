package com.chengxin.financial;import java.util.ArrayList;import java.util.Calendar;import java.util.List;import android.app.AlertDialog;import android.content.DialogInterface;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.ChatMainActivity;import com.chengxin.R;import com.chengxin.Entity.Bill;import com.chengxin.Entity.BillList;import com.chengxin.Entity.Login;import com.chengxin.Entity.LoginResult;import com.chengxin.Entity.PopItem;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.BillAdapter;import com.chengxin.global.GlobalParam;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;import com.chengxin.widget.DemandSearchDialog;import com.chengxin.widget.PopWindows;import com.chengxin.widget.PopWindows.PopWindowsInterface;import com.chengxin.widget.SearchBillDialog;import com.chengxin.widget.SearchBillDialog.OnSearchBillClickListener;public class MyBillActivity extends BaseActivity implements OnItemClickListener, OnSearchBillClickListener {	protected static final int MSG_BILL_LIST = 0x7947;	protected static final int MSG_BILL_ADDED = 0x7948;	protected static final int MSG_BILL_EDITED = 0x7949;	private static final int REQUEST_ADD_BILL = 0x7950;	private static final int REQUEST_EDIT_BILL = 0x7951;		private LinearLayout mListFooter;	private ListView mListView;	private TextView mFooterText;	private int mPage;	private List < Bill > mList = new ArrayList<Bill >();	private BillAdapter mAdapter;	protected int mPosition = -1;	private List<PopItem> mPopList = new ArrayList<PopItem>();	private PopWindows mPopWindows;	private RelativeLayout mTitleLayout;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.services_require_activity);		initComponent();		getData();	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, true, true, false, R.string.my_bill_title);		mLeftBtn.setOnClickListener(this);		mSearchBtn.setOnClickListener(this);		mAddBtn.setOnClickListener(this);				mTitleLayout = (RelativeLayout) findViewById(R.id.title_layout);		mListFooter = (LinearLayout)LayoutInflater.from(mContext).inflate(R.layout.services_require_footer, null);		mFooterText = (TextView)mListFooter.findViewById(R.id.sumary);		mListView = (ListView)findViewById(R.id.list);		mListView.addFooterView(mListFooter);		mListView.setOnItemClickListener(this);				mPopList.add(new PopItem(1, "贷款还款提醒"));		mPopList.add(new PopItem(2, "信用卡还款提醒"));				mPopWindows = new PopWindows(mContext, mPopList, mTitleLayout, new PopWindowsInterface() {			@Override			public void onItemClick(int dataId, int position, View view) {				addBill(dataId);			}		});	}	private void getData() {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					BillList tempList = WeiYuanCommon.getWeiYuanInfo().getBillList(mPage);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, MSG_BILL_LIST, tempList);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_GET_CONTACT_DATA:				LoginResult login = (LoginResult)msg.obj;								if(login == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(login.mState.code == 0){					Login user = login.mLogin;										if(user != null){						Intent intent = new Intent(mContext, ChatMainActivity.class);						user.mIsRoom = 100;						intent.putExtra("data", user);						startActivity(intent);					}				} else {					Toast.makeText(mContext, login.mState.errorMsg,Toast.LENGTH_LONG).show();				}				break;						case MSG_BILL_ADDED:				Bill bill = (Bill) msg.obj;								if (bill != null) {					WeiYuanState state = bill.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						mList.add(0, bill);						showData();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;							case MSG_BILL_EDITED:				bill = (Bill) msg.obj;								if (bill != null) {					WeiYuanState state = bill.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0 && mPosition >= 0){						mList.set(mPosition, bill);						showData();						mPosition = -1;					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;							case MSG_BILL_LIST:				BillList list = (BillList) msg.obj;								if (list != null) {					mList.clear();					WeiYuanState state = list.mState;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						if (list.mBillList != null && list.mBillList.size() > 0) {							mList.addAll(list.mBillList);						}						showData();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;							default:				break;			}		}	};	@Override	public void onClick(View v) {		super.onClick(v);		switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.search_btn:			SearchBillDialog dialog = new SearchBillDialog(mContext, mList);			dialog.setOnSearchBillClickListener(this);			dialog.show();			break;		case R.id.add_btn:			mPopWindows.showGroupPopView(mPopList,					Gravity.RIGHT,					R.drawable.no_top_arrow_bg,					R.color.white,					0);						break;		default:			break;		}	}	protected void showData() {		if (mAdapter == null) {			mAdapter = new BillAdapter(mContext, mList);			mListView.setAdapter(mAdapter);		} else {			mAdapter.notifyDataSetChanged();;		}				showFooter();	}	private void showFooter() {		if (mList.size() == 0) {			mListFooter.setVisibility(View.GONE);		} else {			mListFooter.setVisibility(View.VISIBLE);			mFooterText.setText(String.format("%d项账单", mList.size()));		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);		switch (requestCode) {		case REQUEST_ADD_BILL:			if (resultCode == RESULT_OK) {				if (data != null) {					Bill bill = (Bill) data.getExtras().get("data");										if (bill != null) {						updateBill(bill);					}				}			}			break;		case REQUEST_EDIT_BILL:			if (resultCode == RESULT_OK) {				if (data != null) {					Bill bill = (Bill) data.getExtras().get("data");										if (bill != null) {						updateBill(bill);					}				}			}			break;		default:			break;		}	}	private void updateBill(final Bill bill) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					Bill temp = null;					if (bill.id == 0) {						temp = WeiYuanCommon.getWeiYuanInfo().addBill(bill);						WeiYuanCommon.sendMsg(mHandler, MSG_BILL_ADDED, temp);					} else {						temp = WeiYuanCommon.getWeiYuanInfo().editBill(bill);						WeiYuanCommon.sendMsg(mHandler, MSG_BILL_EDITED, temp);					}									} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();				}			};		}.start();			}	@Override	public void onItemClick(AdapterView<?> listView, View convertView, int position, long uid) {		Bill bill = mList.get(position);		mPosition = position;		editBill(bill);	}	private void addBill(int type) {		Intent intent = new Intent();				if (type == 1) {			intent.setClass(mContext, BillInfoActivity.class);		} else {			intent.setClass(mContext, BillBankActivity.class);		}		startActivityForResult(intent, REQUEST_ADD_BILL);	}	private void editBill(Bill bill) {		Intent intent = new Intent();				if (bill.type == 1) {			intent.setClass(mContext, BillInfoActivity.class);		} else {			intent.setClass(mContext, BillBankActivity.class);		}		intent.putExtra("data", bill);		startActivityForResult(intent, REQUEST_EDIT_BILL);	}	@Override	public void onSearchBillClickListener(int sourcePosition) {		Bill bill = mList.get(sourcePosition);		mPosition = sourcePosition;		editBill(bill);	}	}