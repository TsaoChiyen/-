package com.chengxin.financial;import java.util.Date;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.R;import com.chengxin.Entity.Bill;import com.chengxin.dialog.CPAlert;import com.chengxin.dialog.CPAlert.OnAlertDaySelectId;import com.chengxin.dialog.CPAlert.OnAlertDateSelectId;import com.chengxin.dialog.CPAlert.OnAlertOkSelectId;import com.chengxin.global.FeatureFunction;public class BillInfoActivity extends BaseActivity {	private Bill mBill = null;	//	private LinearLayout mLabelLayout;	private EditText mEditName;	private EditText mEditRemindPeriod;	private EditText mEditDate;	private EditText mEditMoney;	private EditText mEditDayNumber;	private EditText mEditNote;		private long mRepaymentDate;	protected int mRemindPeriod;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.edit_bill_activity);				initComponent();		getData();	}	private void initComponent() {		if (getIntent().hasExtra("data")) {			mBill = (Bill)getIntent().getExtras().get("data");		}		setTitleContent(R.drawable.back_btn, R.drawable.ok, "新增提醒");		mLeftBtn.setOnClickListener(this);		mRightBtn.setOnClickListener(this);//		mLabelLayout = (LinearLayout)findViewById(R.id.layout_label);		mEditName = (EditText)findViewById(R.id.edt_name);		mEditName.setFocusable(false);		mEditName.setFocusableInTouchMode(false);		mEditName.setOnClickListener(this);		mEditRemindPeriod = (EditText)findViewById(R.id.edt_remind_period);		mEditRemindPeriod.setFocusable(false);		mEditRemindPeriod.setFocusableInTouchMode(false);		mEditRemindPeriod.setOnClickListener(this);				mEditDate = (EditText)findViewById(R.id.edt_date);		mEditDate.setFocusable(false);		mEditDate.setFocusableInTouchMode(false);		mEditDate.setOnClickListener(this);				mEditMoney = (EditText)findViewById(R.id.edt_money);				mEditDayNumber = (EditText)findViewById(R.id.edt_day_number);		mEditDayNumber.setFocusable(false);		mEditDayNumber.setFocusableInTouchMode(false);		mEditDayNumber.setOnClickListener(this);		mEditNote = (EditText)findViewById(R.id.edt_note);				if (mBill == null) {			mBill = new Bill(2);			mBill.totalRepay = 0.0;		}	}	private void getData() {		if (mBill != null && mBill.id > 0) {			mEditName.setText(mBill.name);			mRemindPeriod = mBill.remindCycle;			mEditRemindPeriod.setText(mBill.getRemindCircleString());						mRepaymentDate = mBill.repayDate;			Date date = new Date(1000L * mRepaymentDate);			String strDate = FeatureFunction.getDateString(mContext, date, 5);			mEditDate.setText(strDate);			mEditMoney.setText(String.format("%.2f", mBill.repayMoney));			mEditDayNumber.setText(String.valueOf(mBill.leadDay));			mEditNote.setText(mBill.remarks);		}	}	@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.right_btn:			updateData();			break;		case R.id.edt_name:			String []nameList = {"房贷","车贷","信贷","租金"};						CPAlert.showAlert(					mContext,					"选择提醒名称",					nameList,					new OnAlertOkSelectId() {												@Override						public void onOkClick(int whichButton, String state, String city) {							mEditName.setText(city);						}					});			break;		case R.id.edt_remind_period:					CPAlert.showAlert(					mContext,					"选择提醒周期",					Bill.STRING_PERIOD,					new OnAlertOkSelectId() {												@Override						public void onOkClick(int whichButton, String state, String city) {							mRemindPeriod = whichButton;							mEditRemindPeriod.setText(city);						}					});			break;		case R.id.edt_day_number:			int day = 1;			String strDay = mEditDayNumber.getText().toString(); 			if (strDay != null && !strDay.equals("")) {				day = Integer.parseInt(strDay);			}						CPAlert.showAlert(					mContext,					"选择提前天数",					day,					10,					"天",					new OnAlertDaySelectId() {												@Override						public void onOkClick(int whichButton, int day) {							mEditDayNumber.setText(String.valueOf(day));						}					});			break;		case R.id.edt_date:			Date date= new Date();						if (mBill.repayDate > 0) {				date = new Date(1000L * mBill.repayDate);			}						CPAlert.showAlert(					mContext,					"选择首期缴纳时间",					date, new OnAlertDateSelectId() {												@Override						public void onOkClick(int whichButton, Date date) {							String strDate = FeatureFunction.getDateString(mContext, date, 5);							mEditDate.setText(strDate);							mRepaymentDate = date.getTime() / 1000;						}					});			break;		default:			break;		}	}	private void updateData() {		if (mBill != null) {			mBill.name = mEditName.getText().toString();			mBill.remindCycle = mRemindPeriod;			mBill.repayDate = mRepaymentDate;			mBill.repayMoney = Double.parseDouble(mEditMoney.getText().toString());			mBill.leadDay = Integer.parseInt(mEditDayNumber.getText().toString());			mBill.remarks = mEditNote.getText().toString();						String hint = null;						if (mBill.name == null || mBill.name.equals("")) {				hint = "请输入还款名称";//			} else if (mBill.repayment < 1 || mBill.repayment > 31) {//				hint = "请正确输入每月的提醒日期";//			} else if (mBill.price < 1) {//				hint = "请输入到期的还款金额";			}						if (hint != null && hint.length() > 0) {				Toast.makeText(mContext, hint, Toast.LENGTH_LONG).show();;			} else {				submit();			}		}	}	private void submit() {		Intent intent = new Intent();		intent.putExtra("data", mBill);		setResult(RESULT_OK, intent);		this.finish();	}}