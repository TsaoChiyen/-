package com.chengxin.financial;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.LayoutInflater;import android.view.View;import android.widget.AdapterView;import android.widget.AbsListView.OnScrollListener;import android.widget.AdapterView.OnItemClickListener;import android.widget.AdapterView.OnItemLongClickListener;import android.widget.AbsListView;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.ProgressBar;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.R;import com.chengxin.Entity.Financier;import com.chengxin.Entity.FinancingGoods;import com.chengxin.Entity.FinancingGoodsList;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.FinancingGoodsAdapter;import com.chengxin.dialog.MMAlert;import com.chengxin.dialog.MMAlert.OnAlertSelectId;import com.chengxin.global.GlobalParam;import com.chengxin.global.WeiYuanCommon;import com.chengxin.map.BMapApiApp;import com.chengxin.net.WeiYuanException;public class FinancingProductActivity extends BaseActivity implements OnItemClickListener, OnItemLongClickListener {	protected static final int MSG_PRODUCT_LIST = 0x7001;	protected static final int MSG_PRODUCT_ADD = 0x7002;	protected static final int MSG_PRODUCT_EDIT = 0x7003;	protected static final int MSG_PRODUCT_DELETE= 0x7004;	private static final int REQUEST_PRODUCT_INFO = 0x7101;		private LinearLayout mListFooter;	private TextView mFooterText;	private ListView mListView;		protected Financier mFinancier = null;		private List < FinancingGoods > mList = new ArrayList< FinancingGoods >();	private FinancingGoodsAdapter mAdapter;		private int mEditPos = 0;	private int mDelPos = 0;	protected int mPage;	protected boolean mNoMore;	protected LinearLayout mFootView;	private RelativeLayout mAddNew;	private TextView mTextAddNew;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.services_require_activity);				if (getIntent().hasExtra("financier")) {			mFinancier = (Financier) getIntent().getExtras().get("financier");		}				initComponent();		getData(GlobalParam.LIST_LOAD_FIRST);	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, false, false, false, R.string.financing_product_title);		mLeftBtn.setOnClickListener(this);		mAddNew = (RelativeLayout)findViewById(R.id.add_new);		mAddNew.setOnClickListener(this);		mTextAddNew = (TextView)findViewById(R.id.text_addnew);		mTextAddNew.setText("新增产品");				mListFooter = (LinearLayout)LayoutInflater.from(mContext).inflate(R.layout.services_require_footer, null);		mFooterText = (TextView)mListFooter.findViewById(R.id.sumary);		mListView = (ListView)findViewById(R.id.list);		mListView.setOnItemClickListener(this);		mListView.setOnItemLongClickListener(this);				mListView.addFooterView(mListFooter);		mListView.setOnScrollListener(new OnScrollListener() {						@Override			public void onScrollStateChanged(AbsListView view, int scrollState) {				switch (scrollState) {				case OnScrollListener.SCROLL_STATE_IDLE://处理加载更多									if(view.getLastVisiblePosition() == (view.getCount()-1) && !mNoMore){						if (WeiYuanCommon.verifyNetwork(mContext)){							mHandler.sendEmptyMessage(GlobalParam.SHOW_LOADINGMORE_INDECATOR);						}else{							Toast.makeText(mContext, mContext.getString(R.string.network_error), Toast.LENGTH_SHORT).show();						}					}					break;				default:					break;				}			}						@Override			public void onScroll(AbsListView view, int firstVisibleItem,					int visibleItemCount, int totalItemCount) {							}		});			}	private void getData(final int loadType) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					switch (loadType) {					case GlobalParam.LIST_LOAD_FIRST:					case GlobalParam.LIST_LOAD_REFERSH:						WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 								mContext.getResources().getString(R.string.get_dataing));						mPage = 1;						break;					case GlobalParam.LIST_LOAD_MORE:						if(!mNoMore){							mPage += 1;		    			}						break;					}					FinancingGoodsList tempList = WeiYuanCommon.getWeiYuanInfo().getFinancingGoodsList(							mPage,							mFinancier.id);					if (loadType == GlobalParam.LIST_LOAD_MORE) {						WeiYuanCommon.sendMsg(mHandler, GlobalParam.HIDE_LOADINGMORE_INDECATOR, tempList);					} else {						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_LOADINGFIRST_DATA, tempList);					}				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);						WeiYuanState state = null;			FinancingGoods product = null;						switch (msg.what) {			case MSG_PRODUCT_ADD:				product = (FinancingGoods)msg.obj;								if (product != null) {					state = product.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if (state.errorMsg != null && state.errorMsg.length() > 0)						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					if(state.code == 0){						mList.add(0, product);						showData();					}				}				break;			case MSG_PRODUCT_EDIT:				product = (FinancingGoods)msg.obj;								if (product != null) {					state = product.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if (state.errorMsg != null && state.errorMsg.length() > 0)						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					if(state.code == 0){						mList.set(mEditPos, product);						showData();					}				}				break;			case MSG_PRODUCT_DELETE:				state = (WeiYuanState)msg.obj;				if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if (state.errorMsg != null && state.errorMsg.length() > 0)					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				if(state.code == 0){					mList.remove(mDelPos);					showData();				}				break;			case GlobalParam.MSG_LOADINGFIRST_DATA:				FinancingGoodsList list = (FinancingGoodsList)msg.obj;								if (list == null) {					return;				}								state = list.mState;				if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if (state.errorMsg != null && state.errorMsg.length() > 0)					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				if(state.code == 0){					mList.clear();										if (list != null && list.size() > 0) {						if (list.mPageInfo != null) {							mNoMore = list.mPageInfo.hasMore == 0;						}												mList.addAll(list.mList);					}										showData();				}				break;							case GlobalParam.SHOW_LOADINGMORE_INDECATOR:				if (mListView.getFooterViewsCount() == 0) {					if (mFootView == null) {						mFootView = (LinearLayout) LayoutInflater.from(mContext)								.inflate(R.layout.hometab_listview_footer, null);					}					mListView.addFooterView(mFootView);						ProgressBar pb = (ProgressBar)mFootView.findViewById(R.id.hometab_addmore_progressbar);					pb.setVisibility(View.VISIBLE);		 							TextView more = (TextView)mFootView.findViewById(R.id.hometab_footer_text);					more.setText(BMapApiApp.getInstance().getResources().getString(R.string.add_more_loading));				}		 		getData(GlobalParam.LIST_LOAD_MORE);				break;			case GlobalParam.HIDE_LOADINGMORE_INDECATOR:				list = (FinancingGoodsList)msg.obj;								if (list == null) {					return;				}								state = list.mState;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if (state.errorMsg != null && state.errorMsg.length() > 0)					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				if(state.code == 0){					if (list != null && list.size() > 0) {						if (list.mPageInfo != null) {							mNoMore = list.mPageInfo.hasMore == 0;						}												mList.addAll(list.mList);					}										showData();				}								if (mFootView != null) {					mListView.removeFooterView(mFootView);				}								break;			}		}	};	@Override	public void onClick(View v) {		super.onClick(v);		switch (v.getId()) {		case R.id.left_btn:			setResult(RESULT_OK);			this.finish();			break;		case R.id.add_new:			addProduct();			break;		default:			break;		}	}	protected void showData() {		if (mAdapter == null) {			mAdapter = new FinancingGoodsAdapter(mContext, mList);			mListView.setAdapter(mAdapter);		} else {			mAdapter.notifyDataSetChanged();;		}				showFooter();	}	private void showFooter() {		if (mList.size() == 0) {			mListFooter.setVisibility(View.GONE);		} else {			mListFooter.setVisibility(View.VISIBLE);			mFooterText.setText(String.format("共计 %d 项产品", mList.size()));		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);				FinancingGoods product = null;				switch (requestCode) {		case REQUEST_PRODUCT_INFO:			if (resultCode == RESULT_OK) {				if (data != null) {					if (data.hasExtra("data")) {						product = (FinancingGoods)data.getExtras().get("data");					}				}				if (product != null) {					updateProduct(product);				}			}			break;		default:			break;		}	}	private void updateProduct(final FinancingGoods product) {		if (product == null) {			return;		}		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.commit_dataing));					if (product.id == 0) {						FinancingGoods temp = WeiYuanCommon.getWeiYuanInfo().addFinancingGoods(product);						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_ADD, temp);					} else {						FinancingGoods temp = WeiYuanCommon.getWeiYuanInfo().editFinancingGoods(product);						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_EDIT, temp);					}				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	@Override	public void onItemClick(AdapterView<?> list, View convertView, int position, long uid) {		if (position < mList.size()) {			FinancingGoods product = mList.get(position);			mEditPos = position;			editProduct(product);		}	}//	@Override//	public void onClick(View v, int position, int uid) {//		final FinancingGoods product = mList.get(position);//		mDelPos = position;//		//		MMAlert.showAlert(mContext, "是否确定要删除该产品？",//				mContext.getResources().getStringArray(R.array.confirm_item), //				null, new OnAlertSelectId() {////			@Override//			public void onClick(int whichButton) {//				switch (whichButton) {//				case 0://确定删除//					deleteProduct(product);//					break;//			//				default://					break;//				}//			}//		});//	}//	private void addProduct() {		Intent intent = new Intent();		intent.setClass(mContext, FinancingProductInfoActivity.class);		startActivityForResult(intent, REQUEST_PRODUCT_INFO);	}	private void deleteProduct(final FinancingGoods product) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().deleteFinancingGoods(product.id);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_DELETE, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	private void editProduct(FinancingGoods product) {		Intent intent = new Intent();		intent.setClass(mContext, FinancingProductInfoActivity.class);		intent.putExtra("data", product);		startActivityForResult(intent, REQUEST_PRODUCT_INFO);			}	@Override	public boolean onItemLongClick(AdapterView<?> list, View convertView, int position, long uid) {		final FinancingGoods product = mList.get(position);				if (product != null) {			mDelPos = position;			MMAlert.showAlert(mContext, "是否确定要删除该产品？",					mContext.getResources().getStringArray(R.array.confirm_item), 					null, new OnAlertSelectId() {				@Override				public void onClick(int whichButton) {					switch (whichButton) {					case 0://确定删除						deleteProduct(product);						break;									default:						break;					}				}			});						return true;		}		return false;	}}