package com.chengxin.financial;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.LayoutInflater;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.R;import com.chengxin.Entity.Financier;import com.chengxin.Entity.FinancingGoods;import com.chengxin.Entity.FinancingGoodsList;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.FinancingGoodsAdapter;import com.chengxin.adapter.FinancingGoodsAdapter.OnFinancingGoodsClickListener;import com.chengxin.dialog.MMAlert;import com.chengxin.dialog.MMAlert.OnAlertSelectId;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;import com.hp.hpl.sparta.xpath.Step;public class FinancingProductActivity extends BaseActivity implements OnItemClickListener, OnFinancingGoodsClickListener {	protected static final int MSG_PRODUCT_LIST = 0x7001;	protected static final int MSG_PRODUCT_ADD = 0x7002;	protected static final int MSG_PRODUCT_EDIT = 0x7003;	protected static final int MSG_PRODUCT_DELETE= 0x7004;	private static final int REQUEST_PRODUCT_INFO = 0x7101;		private LinearLayout mListFooter;	private TextView mFooterText;	private ListView mListView;		protected Financier mFinancier = null;		private List < FinancingGoods > mList = new ArrayList< FinancingGoods >();	private FinancingGoodsAdapter mAdapter;		private int mEditPos = 0;	private int mDelPos = 0;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.services_require_activity);				if (getIntent().hasExtra("financier")) {			mFinancier = (Financier) getIntent().getExtras().get("financier");		}				initComponent();		getData();	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, false, true, false, R.string.financing_product_title);		mLeftBtn.setOnClickListener(this);		mAddBtn.setOnClickListener(this);				mListFooter = (LinearLayout)LayoutInflater.from(mContext).inflate(R.layout.services_require_footer, null);		mFooterText = (TextView)mListFooter.findViewById(R.id.sumary);		mListView = (ListView)findViewById(R.id.list);		mListView.setOnItemClickListener(this);		mListView.addFooterView(mListFooter);	}	private void getData() {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					FinancingGoodsList tempList = WeiYuanCommon.getWeiYuanInfo().getFinancingGoodsList(mFinancier.id);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_LIST, tempList);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);						WeiYuanState state = null;			FinancingGoods product = null;						switch (msg.what) {			case MSG_PRODUCT_ADD:				product = (FinancingGoods)msg.obj;								if (product != null) {					state = product.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						mList.add(0, product);						showData();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;			case MSG_PRODUCT_EDIT:				product = (FinancingGoods)msg.obj;								if (product != null) {					state = product.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						mList.set(mEditPos, product);						showData();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;			case MSG_PRODUCT_DELETE:				state = (WeiYuanState)msg.obj;				if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(state.code == 0){					mList.remove(mDelPos);					showData();				} else {					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				}				break;			case MSG_PRODUCT_LIST:				FinancingGoodsList list = (FinancingGoodsList) msg.obj;								if (list != null) {					mList.clear();					state = list.mState;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						if (list.mList != null && list.mList.size() > 0) {							mList.addAll(list.mList);						}						showData();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;							default:				break;			}		}	};	@Override	public void onClick(View v) {		super.onClick(v);		switch (v.getId()) {		case R.id.left_btn:			setResult(RESULT_OK);			this.finish();			break;		case R.id.add_btn:			addProduct();			break;		default:			break;		}	}	protected void showData() {		if (mAdapter == null) {			mAdapter = new FinancingGoodsAdapter(mContext, mList);			mAdapter.type = 1;			mAdapter.setOnFinancingGoodsClickListener(this);			mListView.setAdapter(mAdapter);		} else {			mAdapter.notifyDataSetChanged();;		}				showFooter();	}	private void showFooter() {		if (mList.size() == 0) {			mListFooter.setVisibility(View.GONE);		} else {			mListFooter.setVisibility(View.VISIBLE);			mFooterText.setText(String.format("共计 %d 项产品", mList.size()));		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);				FinancingGoods product = null;				switch (requestCode) {		case REQUEST_PRODUCT_INFO:			if (resultCode == RESULT_OK) {				if (data != null) {					if (data.hasExtra("data")) {						product = (FinancingGoods)data.getExtras().get("data");					}				}				if (product != null) {					updateProduct(product);				}			}			break;		default:			break;		}	}	private void updateProduct(final FinancingGoods product) {		if (product == null) {			return;		}		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.commit_dataing));					if (product.id == 0) {						FinancingGoods temp = WeiYuanCommon.getWeiYuanInfo().addFinancingGoods(								product.name,								product.type,								product.features,								product.material,								product.bidding,								product.adPrice);						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_ADD, temp);					} else {						WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().editFinancingGoods(								product.id,								product.name,								product.type,								product.features,								product.material,								product.bidding,								product.adPrice);						product.state = state;						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_EDIT, product);					}				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	@Override	public void onItemClick(AdapterView<?> list, View convertView, int position, long uid) {		FinancingGoods product = mList.get(position);		mEditPos = position;		editProduct(product);	}	@Override	public void onClick(View v, int position, int uid) {		final FinancingGoods product = mList.get(position);		mDelPos = position;				MMAlert.showAlert(mContext, "是否确定要删除该产品？",				mContext.getResources().getStringArray(R.array.confirm_item), 				null, new OnAlertSelectId() {			@Override			public void onClick(int whichButton) {				switch (whichButton) {				case 0://确定删除					deleteProduct(product);					break;							default:					break;				}			}		});	}	private void addProduct() {		Intent intent = new Intent();		intent.setClass(mContext, FinancingProductInfoActivity.class);		startActivityForResult(intent, REQUEST_PRODUCT_INFO);	}	private void deleteProduct(final FinancingGoods product) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().deleteFinancingGoods(product.id);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, MSG_PRODUCT_DELETE, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	private void editProduct(FinancingGoods product) {		Intent intent = new Intent();		intent.setClass(mContext, FinancingProductInfoActivity.class);		intent.putExtra("data", product);		startActivityForResult(intent, REQUEST_PRODUCT_INFO);			}}