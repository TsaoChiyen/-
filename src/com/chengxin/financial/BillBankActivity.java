package com.chengxin.financial;import java.util.Date;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.CompoundButton.OnCheckedChangeListener;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.R;import com.chengxin.Entity.Bill;import com.chengxin.dialog.CPAlert;import com.chengxin.dialog.CPAlert.OnAlertDateSelectId;import com.chengxin.dialog.CPAlert.OnAlertDaySelectId;import com.chengxin.dialog.CPAlert.OnAlertOkSelectId;import com.chengxin.global.FeatureFunction;public class BillBankActivity extends BaseActivity implements OnCheckedChangeListener {	private Bill mBill = null;		private LinearLayout mLabelLayout;	private RelativeLayout mProtocolLayout;		private EditText mEditCard;	private EditText mEditName;	private EditText mEditDate;	private EditText mEditEmail;	private EditText mEditPassword;	private EditText mEditLogin;	private EditText mEditServer;		private CheckBox mChkAgree;	private TextView mBtnProtocol;	private long mRepaymentDate;	private boolean mIsChecked = false;	private CheckBox mChkEnabled;	private TextView mBtnEnabledl;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.bank_bill_activity);				initComponent();		getData();	}	private void initComponent() {		if (getIntent().hasExtra("data")) {			mBill = (Bill)getIntent().getExtras().get("data");		}		setTitleContent(R.drawable.back_btn, R.drawable.ok, "新增信用卡");		mLeftBtn.setOnClickListener(this);		mRightBtn.setOnClickListener(this);		mLabelLayout = (LinearLayout)findViewById(R.id.layout_label);		mProtocolLayout = (RelativeLayout)findViewById(R.id.layout_protocol);		mEditCard = (EditText)findViewById(R.id.edt_card);				mEditName = (EditText)findViewById(R.id.edt_name);		mEditName.setFocusable(false);		mEditName.setFocusableInTouchMode(false);		mEditName.setOnClickListener(this);				mEditDate = (EditText)findViewById(R.id.edt_date);		mEditDate.setFocusable(false);		mEditDate.setFocusableInTouchMode(false);		mEditDate.setOnClickListener(this);		mEditEmail = (EditText)findViewById(R.id.edt_email);		mEditPassword = (EditText)findViewById(R.id.edt_password);//		mEditLogin = (EditText)findViewById(R.id.edt_login);//		mEditServer = (EditText)findViewById(R.id.edt_server);		mChkAgree = (CheckBox)findViewById(R.id.chk_agree);		mBtnProtocol = (TextView)findViewById(R.id.btn_protocol);		mChkEnabled = (CheckBox)findViewById(R.id.check_enabled);		mBtnEnabledl = (TextView)findViewById(R.id.btn_enabled);		mChkAgree.setOnCheckedChangeListener(this);		mBtnProtocol.setOnClickListener(this);//		if (mBill != null && mBill.id > 0) {//			mLabelLayout.setVisibility(View.VISIBLE);//			//			if (mBill.email != null && !mBill.email.equals("") && !mBill.email.equals("null")) {//				mProtocolLayout.setVisibility(View.GONE);//			}//		} else {		if (mBill == null) {			mBill = new Bill(1);			mBill.repayMoney = 0.0;			mBill.totalRepay = 0.0;		}	}	private void getData() {		if (mBill != null && mBill.id > 0) {//			mEditCard.setText(mBill.card);//			mEditName.setText(mBill.bank);////			mRepaymentDate = mBill.repayment % 31;//			if (mRepaymentDate == 0) mRepaymentDate = 31;////			Date date = new Date(mRepaymentDate * 1000);////			mEditDate.setText(FeatureFunction.getDateString(mContext, date, 2));//			mEditDate.setText(String.valueOf(mRepaymentDate));		}	}	@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.right_btn:			submit();			break;		case R.id.edt_date:			int day = 1;			String strDay = mEditDate.getText().toString(); 			if (strDay != null && !strDay.equals("")) {				day = Integer.parseInt(strDay);			}			CPAlert.showAlert(					mContext,					"选择还款日",					day,					30,					"日",					new OnAlertDaySelectId() {												@Override						public void onOkClick(int whichButton, int day) {							mEditDate.setText(String.valueOf(day));						}					});//			Date date= new Date();//			//			if (mRepaymentDate > 0) {//				date = new Date(mRepaymentDate * 1000);//			}//			//			CPAlert.showAlert(//					mContext,//					"选择还款期限",//					date,//					new OnAlertDateSelectId() {//						//						@Override//						public void onOkClick(int whichButton, Date date) {//							String strDate = FeatureFunction.getDateString(mContext, date, 2);//							mEditDate.setText(strDate);//							mRepaymentDate = date.getTime() / 1000;//						}//					});			break;		case R.id.btn_protocol:			break;		case R.id.btn_enabled:			break;		case R.id.edt_name:			String items[] = mContext.getResources().getStringArray(R.array.bank_array);			CPAlert.showAlert(					mContext,					"选择还款银行", 					items,					new OnAlertOkSelectId() {												@Override						public void onOkClick(int whichButton, String state, String city) {							if (city != null ) {								mEditName.setText(city);							}						}					});			break;		default:			break;		}	}		@Override	public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {		if (buttonView == mChkAgree) {			mIsChecked = isChecked;		} else if (buttonView == mChkEnabled) {			mBill.autoGet = isChecked ? 1 : 0;		}	}	private Boolean checkValue() {		Boolean isChecked = false;				if (mBill != null) {			mBill.credit = Integer.valueOf(mEditCard.getText().toString());			mBill.bankName = mEditName.getText().toString();			mBill.repayDate = Integer.valueOf(mEditDate.getText().toString());						mBill.email = mEditEmail.getText().toString();			mBill.emailPass = mEditPassword.getText().toString();//			mBill.emaillogin = mEditLogin.getText().toString();//			mBill.emailsvr = mEditServer.getText().toString();						String hint = null;						if (mBill.credit < 1000) {				hint = "请输入信用卡卡号的4位尾号";			} else if (mBill.bankName == null || mBill.bankName.equals("")) {				hint = "请选择还款银行";			} else if (mBill.repayDate < 1 || mBill.repayDate > 31) {				hint = "请指定正确的还款最后期限";			} else if (mBill.email != null && !mBill.email.equals("")) {				if (mIsChecked == false) {					hint = "必须同意邮件抓取授权协议后才能设置信用卡账单邮箱";				}			} else {				isChecked = true;			}						if (hint != null && hint.length() > 0) {				Toast.makeText(mContext, hint, Toast.LENGTH_LONG).show();;			}		}				return isChecked;	}	private void submit() {		if (checkValue() == false) {			return;		}				Intent intent = new Intent();		intent.putExtra("data", mBill);		setResult(RESULT_OK, intent);		this.finish();	}}