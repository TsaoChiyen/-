package com.chengxin.financial;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Parcelable;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.LocationActivity;import com.chengxin.R;import com.chengxin.Entity.CheckItem;import com.chengxin.Entity.FinancingGoods;import com.chengxin.Entity.Login;import com.chengxin.Entity.LoginResult;import com.chengxin.Entity.MapInfo;import com.chengxin.dialog.CPAlert;import com.chengxin.dialog.CPAlert.NumberData;import com.chengxin.dialog.CPAlert.OnAlertDaySelectId;import com.chengxin.dialog.CPAlert.OnAlertOkSelectId;import com.chengxin.dialog.CPAlert.OnAlertRangeSelected;import com.chengxin.global.CheckListActivity;import com.chengxin.global.GlobleType;import com.chengxin.global.WeiYuanCommon;public class FinancingProductInfoActivity extends BaseActivity {	private static final int REQUEST_MATERIAL = 0x8401;	private static final int REQUEST_CLIENT = 0x8402;		private FinancingGoods mFinancingGoods = null;	private LinearLayout mLayoutCharge;	private TextView mBtnCharge;//	private EditText mEditCharge;	private TextView mTextPromptDetail;	private Button mBtnSubmit;	private TextView mTextAdvPromptDetail;	private EditText mEditAdvBid;	private EditText mEditRankBid;	private TextView mBtnAdvBid;	private TextView mBtnRankBid;	private EditText mEditName;	private EditText mEditType;	private EditText mEditAmount;	private EditText mEditLimit;	private EditText mEditLoanTime;	private EditText mEditMonthly;	private EditText mEditMonthRepay;	private EditText mEditClientType;	private EditText mEditMaterial;	private EditText mEditOther;	private EditText mEditCondition;	private EditText mEditLocate;	private EditText mEditService;	private EditText mEditTotalMoney;	List <CheckItem> matList;	List <CheckItem> cliList;	private EditText mEditRepayMode;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.financing_product_info);		if (getIntent().hasExtra("data")) {			mFinancingGoods = (FinancingGoods)getIntent().getExtras().get("data");		}				if (mFinancingGoods == null) {			Login user = WeiYuanCommon.getLoginResult(mContext);						mFinancingGoods = new FinancingGoods();			mFinancingGoods.noUnit = true;			mFinancingGoods.shopid = user.financier.id;			mFinancingGoods.loanTime = 1;		}				matList = FinancingGoods.getMaterialCheckList();		cliList = FinancingGoods.getClientCheckList();				initComponent();		getData();	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, 0, "融资产品信息");		mLeftBtn.setOnClickListener(this);				mEditName = (EditText)findViewById(R.id.edit_name);		mEditType = (EditText)findViewById(R.id.edit_type);		mEditAmount = (EditText)findViewById(R.id.edit_amount);		mEditLimit = (EditText)findViewById(R.id.edit_limit);		mEditLoanTime = (EditText)findViewById(R.id.edit_loan_time);		mEditMonthly = (EditText)findViewById(R.id.edit_monthly);		mEditMonthRepay = (EditText)findViewById(R.id.edit_month_repay);		mEditRepayMode = (EditText)findViewById(R.id.edit_repay_mode);		mEditTotalMoney = (EditText)findViewById(R.id.edit_total_money);		mEditClientType = (EditText)findViewById(R.id.edit_client_type);		mEditMaterial = (EditText)findViewById(R.id.edit_material);		mEditOther = (EditText)findViewById(R.id.edit_other);		mEditCondition = (EditText)findViewById(R.id.edit_condition);		mEditLocate = (EditText)findViewById(R.id.edit_locate);		mEditService = (EditText)findViewById(R.id.edit_service);				mEditType.setOnClickListener(this);		mEditAmount.setOnClickListener(this);		mEditLimit.setOnClickListener(this);		mEditLoanTime.setOnClickListener(this);		mEditRepayMode.setOnClickListener(this);		mEditClientType.setOnClickListener(this);		mEditMaterial.setOnClickListener(this);		mEditLocate.setOnClickListener(this);		mEditService.setOnClickListener(this);				mTextAdvPromptDetail = (TextView)findViewById(R.id.text_adv_prompt_detail);		mEditRankBid = (EditText)findViewById(R.id.edit_rank_bid);		mEditAdvBid = (EditText)findViewById(R.id.edit_adv_bid);		mBtnRankBid = (TextView)findViewById(R.id.btn_rank_bid);		mBtnAdvBid = (TextView)findViewById(R.id.btn_adv_bid);		mBtnRankBid.setOnClickListener(this);		mBtnAdvBid.setOnClickListener(this);		mLayoutCharge = (LinearLayout)findViewById(R.id.layout_charge);		mBtnCharge = (TextView)findViewById(R.id.btn_charge);//		mEditCharge = (EditText)findViewById(R.id.edit_charge);		mTextPromptDetail = (TextView)findViewById(R.id.text_prompt_detail);		mLayoutCharge.setVisibility(View.VISIBLE);		mBtnSubmit = (Button)findViewById(R.id.btn_submit);				mBtnCharge.setOnClickListener(this);		mBtnSubmit.setOnClickListener(this);				if (mFinancingGoods == null || mFinancingGoods.id == 0) {			mBtnSubmit.setText("添加产品");			mBtnRankBid.setVisibility(View.INVISIBLE);			mBtnAdvBid.setVisibility(View.INVISIBLE);		}	}	private void getData() {		if (mFinancingGoods !=null && mFinancingGoods.id > 0) {			mFinancingGoods.noUnit = true;			mFinancingGoods.setMaterialListChecked(matList);			mFinancingGoods.setClientListChecked(cliList);						if (mFinancingGoods.name != null && !mFinancingGoods.name.equals("") && !mFinancingGoods.name.equals("null")) {				mEditName.setText(mFinancingGoods.name);			}			mEditType.setText(mFinancingGoods.getTypeString());			mEditAmount.setText(mFinancingGoods.getLoanAmountString());			mEditLimit.setText(mFinancingGoods.getLoanPeriodString());			mEditLoanTime.setText(mFinancingGoods.getLoanTimeString());			mEditMonthly.setText(mFinancingGoods.getMonthlyString());			mEditMonthRepay.setText(mFinancingGoods.getMonthRepayString());			mEditTotalMoney.setText(mFinancingGoods.getTotalPriceString());			mEditClientType.setText(FinancingGoods.getListString(mFinancingGoods.clientType));			mEditMaterial.setText(FinancingGoods.getListString(mFinancingGoods.material));			mEditOther.setText(FinancingGoods.getListString(mFinancingGoods.other));			mEditCondition.setText(FinancingGoods.getListString(mFinancingGoods.loanTerms));			mEditLocate.setText(FinancingGoods.getListString(mFinancingGoods.city));			mEditService.setText(mFinancingGoods.getServiceRangeString());						if (mFinancingGoods.bidding > 0) {				mEditRankBid.setText(String.valueOf(mFinancingGoods.bidding));			}			if (mFinancingGoods.adPrice > 0) {				mEditAdvBid.setText(String.valueOf(mFinancingGoods.adPrice));			}			mTextAdvPromptDetail.setText("324芯币/次");			mTextPromptDetail.setText("10芯币＝1人民币");		}	}		@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.btn_rank_bid:		case R.id.btn_adv_bid:			Toast.makeText(mContext, "测试期间，暂不提供竞价排名服务！", Toast.LENGTH_LONG).show();;			break;		case R.id.btn_charge:			Toast.makeText(mContext, "测试期间，暂不提供充值服务！", Toast.LENGTH_LONG).show();;			break;		case R.id.btn_submit:			submit();			break;		case R.id.edit_type:			selectType();			break;		case R.id.edit_repay_mode:			selectRepayMode();			break;		case R.id.edit_amount:			chooseAmount();			break;		case R.id.edit_limit:			chooseLimit();			break;		case R.id.edit_loan_time:			selectLoanTime();			break;		case R.id.edit_client_type:			chooseClientType();			break;		case R.id.edit_material:			chooseMaterial();			break;		case R.id.edit_locate:			getLocation();			break;		case R.id.edit_service:			selectServiceRange();			break;		}	}	private void getLocation() {		Intent intent = new Intent(this, LocationActivity.class);		startActivityForResult(intent, GlobleType.RESQUEST_MAP_LOACTION);	}	private void chooseMaterial() {		Intent intent = new Intent();		intent.setClass(mContext, CheckListActivity.class);		intent.putParcelableArrayListExtra(				"data",				(ArrayList<? extends Parcelable>)matList);		intent.putExtra("title", "选择所需资料");		startActivityForResult(intent, REQUEST_MATERIAL);	}	private void chooseClientType() {		Intent intent = new Intent();		intent.setClass(mContext, CheckListActivity.class);		intent.putParcelableArrayListExtra(				"data",				(ArrayList<? extends Parcelable>)cliList);		intent.putExtra("title", "选择所需资料");		startActivityForResult(intent, REQUEST_CLIENT);	}	private void chooseAmount() {		CPAlert.showAlert(				mContext,				"选择放款期限",				new NumberData(1, 1, 100, "　　－"),				new NumberData(1, 1, 100, "　　万元"),				new OnAlertRangeSelected() {										@Override					public void onOkClick(int start, int end) {						mFinancingGoods.setAmount(start, end);						mEditAmount.setText(mFinancingGoods.getLoanAmountString());					}				});	}	private void chooseLimit() {		CPAlert.showAlert(				mContext,				"选择放款期限",				new NumberData(1, 1, 36, "　　－"),				new NumberData(1, 1, 36, "　　个月"),				new OnAlertRangeSelected() {										@Override					public void onOkClick(int start, int end) {						mFinancingGoods.setLimit(start, end);						mEditLimit.setText(mFinancingGoods.getLoanPeriodString());					}				});	}	private void selectRepayMode() {		CPAlert.showAlert(				mContext,				"选择还款方式",				FinancingGoods.REPAY_MODE,				new OnAlertOkSelectId() {										@Override					public void onOkClick(int whichButton, String unusedParam, String outString) {						mFinancingGoods.repayMode = outString;						mEditRepayMode.setText(mFinancingGoods.repayMode);					}				});	}	private void selectServiceRange() {		CPAlert.showAlert(				mContext,				"选择服务范围",				FinancingGoods.SERVICE_RANGE,				new OnAlertOkSelectId() {										@Override					public void onOkClick(int whichButton, String unusedParam, String outString) {						mFinancingGoods.serviceRange = outString;						mEditService.setText(mFinancingGoods.getServiceRangeString());					}				});	}	private void selectLoanTime() {		CPAlert.showAlert(				mContext,				"选择放款时间",				(int)mFinancingGoods.loanTime,				30,				"工作日",				new OnAlertDaySelectId() {						@Override			public void onOkClick(int whichButton, int day) {				mFinancingGoods.loanTime = day;				mEditLoanTime.setText(mFinancingGoods.getLoanTimeString());			}		});	}	private void selectType() {		CPAlert.showAlert(				mContext,				"选择产品类型",				FinancingGoods.PRODUCT_TYPE,				new OnAlertOkSelectId() {										@Override					public void onOkClick(int whichButton, String unusedParam, String outString) {						mFinancingGoods.type = whichButton + 1;						mEditType.setText(outString);					}				});	}	private void submit() {		if (!checkValue()) {			return;		}				Intent intent = new Intent();		intent.putExtra("data", mFinancingGoods);		setResult(RESULT_OK, intent);		this.finish();	}	private boolean checkValue() {		String hint = null;				mFinancingGoods.name = mEditName.getText().toString();		mFinancingGoods.other = mEditOther.getText().toString();		mFinancingGoods.loanTerms = mEditCondition.getText().toString();				try {			mFinancingGoods.monthly = Double.parseDouble(mEditMonthly.getText().toString());			mFinancingGoods.monthRepay = Double.parseDouble(mEditMonthRepay.getText().toString());			mFinancingGoods.totalPrice = Double.parseDouble(mEditTotalMoney.getText().toString());		} catch (Exception e) {			e.printStackTrace();			hint = "请正确填写金额或月息的值";		}		//		try {//			mFinancingGoods.bidding= Double.valueOf(mEditRankBid.getText().toString());//			mFinancingGoods.adPrice = Double.valueOf(mEditAdvBid.getText().toString());//		} catch (Exception e) {//			e.printStackTrace();//		}////		String number = mEditCharge.getText().toString();//		//		if (number == null || number.equals("")) {//		}		if (mFinancingGoods.name == null || mFinancingGoods.name.equals("")) {			hint = "请输入产品名称";		} else if (mFinancingGoods.city == null || mFinancingGoods.city.equals("")  || mFinancingGoods.city.equals("null")) {			hint = "请定位产品所在的城市";//		} else if (mFinancingGoods.type == null || mFinancingGoods.type.equals("")) {//			hint = "请输入产品类型";//		} else if (mFinancingGoods.features == null || mFinancingGoods.features.equals("")) {//			hint = "请输入产品特征";//		} else if (mFinancingGoods.material == null || mFinancingGoods.material.equals("")) {//			hint = "请输入需要材料";//		} else if (mFinancingGoods.bidding == 0) {//			hint = "请输入竞价排名价格";//		} else if (mFinancingGoods.adPrice == 0) {//			hint = "请输入你的广告位出价";		}				if (hint != null && hint.length() > 0) {			Toast.makeText(mContext, hint, Toast.LENGTH_LONG).show();			return false;		}				return true;	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);		switch (requestCode) {		case REQUEST_MATERIAL:			if(data != null && RESULT_OK == resultCode){				List< CheckItem > list = (List< CheckItem >)(ArrayList<? extends Parcelable>)data.getParcelableArrayListExtra("data");				if (list != null && list.size() > 0) {					matList.clear();					matList.addAll(list);				}								String ids = "";				String names = "";								for (int i = 0; i < matList.size(); i++) {					CheckItem item = matList.get(i);										if (item.isChecked) {						if (ids.length() > 0) {							ids += ",";							names += ",";						}												ids += item.id;						names += "'" + item.name + "'";					}				}								mFinancingGoods.setMaterial(names);				mEditMaterial.setText(FinancingGoods.getListString(mFinancingGoods.material));			}			break;		case REQUEST_CLIENT:			if(data != null && RESULT_OK == resultCode){				List< CheckItem > list = (List< CheckItem >)(ArrayList<? extends Parcelable>)data.getParcelableArrayListExtra("data");				if (list != null && list.size() > 0) {					cliList.clear();					cliList.addAll(list);				}								String ids = "";				String names = "";								for (int i = 0; i < cliList.size(); i++) {					CheckItem item = cliList.get(i);										if (item.isChecked) {						if (ids.length() > 0) {							ids += ",";							names += ",";						}												ids += item.id;						names += "'" + item.name + "'";					}				}								mFinancingGoods.setClientType(names);				mEditClientType.setText(FinancingGoods.getListString(mFinancingGoods.clientType));			}			break;		case GlobleType.RESQUEST_MAP_LOACTION:			if(data != null && RESULT_OK == resultCode){				Bundle bundle = data.getExtras();				if(bundle != null){					MapInfo mapInfo = (MapInfo)data.getSerializableExtra("mapInfo");										if(mapInfo == null){						Toast.makeText(mContext, mContext.getString(R.string.get_location_failed), Toast.LENGTH_SHORT).show();						return;					}					String city = mapInfo.getCity();					mFinancingGoods.city = getBriefOfCity(city);					mFinancingGoods.lat = Double.parseDouble(mapInfo.getLat());					mFinancingGoods.lng = Double.parseDouble(mapInfo.getLng());					mEditLocate.setText(city);				}			}			break;		}	}	private String getBriefOfCity(String city) {		String mCity = city;				if (city.endsWith("市") || city.endsWith("省")) {			mCity = city.substring(0, city.length() - 1);		} else if (city.endsWith("特别行政区")) { 			mCity = city.substring(0, city.length() - 5);		}else {			mCity = city;		}				return mCity;	}}