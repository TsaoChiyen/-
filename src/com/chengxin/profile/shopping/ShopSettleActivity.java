package com.chengxin.profile.shopping;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import android.widget.AdapterView.OnItemClickListener;import com.chengxin.BaseActivity;import com.chengxin.R;import com.chengxin.Entity.Order;import com.chengxin.Entity.OrderList;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.ShopSettleAdapter;import com.chengxin.adapter.ShopSettleAdapter.OnSettleItemCheckListener;import com.chengxin.global.GlobalParam;import com.chengxin.global.GlobleType;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;public class ShopSettleActivity extends BaseActivity {	protected static final int REQUEST_ORDER_HANDLE = 0x9001;	protected static final int MSG_APPLY_SETTLE = 0x9002;	private static final int REQUEST_APPEAL = 0x9003;	private List< Order > mOrderList = new ArrayList<Order>();	private ListView listView;	private ShopSettleAdapter mAdapter;	private float mTotalPrice;	protected int mCurrentView = 0;		private Button mSettleableButton;	private Button mHistoryButton;	private TextView mTextSumary;	private Button mSettleButton;	private Button mAppealButton;	private int mShopType = 0;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.shop_settle_activity);		if (getIntent().hasExtra("type")) {			mShopType   = getIntent().getIntExtra("type", GlobleType.SHOPPING_MANAGER);		}		initComponent();		        listView = (ListView)findViewById(R.id.order_list);		listView.setOnItemClickListener(mItemClickListener);        		        if (mOrderList != null && mOrderList.size() > 0) {        	mOrderList.clear();        }                getData();	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_CHECK_STATE:				WeiYuanState state = (WeiYuanState)msg.obj;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if (state.errorMsg != null && state.errorMsg.length() > 0)					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				if(state.code == 0){					showData();				}				break;							case MSG_APPLY_SETTLE:				state = (WeiYuanState)msg.obj;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if (state.errorMsg != null && state.errorMsg.length() > 0)					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				if(state.code == 0){					getData();				}				break;			default:				break;			}		}	};	private TextView mSelectedSumary;	private void showData() {		mAdapter = new ShopSettleAdapter(mContext, mOrderList);				mAdapter.setListener(new OnSettleItemCheckListener() {						@Override			public void onItemCheckChanged(View v, int position, boolean checked) {				showSelectedSumary();			}		});				listView.setAdapter(mAdapter);		showSumary();	}	protected void showSelectedSumary() {		float price = 0;		int number = 0;				if (mOrderList != null && mOrderList.size() > 0) {			for (int i = 0; i < mOrderList.size(); i++) {				Order order = mOrderList.get(i);								if (order.selected) {					price += order.totalPrice;					number += 1;				}			}		}		if (price == 0 && number == 0) {			mSelectedSumary.setVisibility(View.GONE);		} else {			mSelectedSumary.setVisibility(View.VISIBLE);			mSelectedSumary.setText(String.format("已选择 %d 个订单    共计: %.2f 元",					number, price));		}	}	private void showSumary() {		mTextSumary.setText(String.format("订单 %d 个    金额: %.2f 元",				mOrderList.size(), mTotalPrice));	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, 0, R.string.shop_settle_title);        mLeftBtn.setOnClickListener(this);                mSettleableButton = (Button)findViewById(R.id.btn_settleable);        mSettleableButton.setOnClickListener(this);        mHistoryButton = (Button)findViewById(R.id.btn_history);        mHistoryButton.setOnClickListener(this);                mTextSumary = (TextView)findViewById(R.id.txt_sumary);        mSelectedSumary = (TextView)findViewById(R.id.selected_sumary);                mSettleButton = (Button)findViewById(R.id.btn_settle);        mSettleButton.setOnClickListener(this);        mAppealButton = (Button)findViewById(R.id.btn_appeal);        mAppealButton.setOnClickListener(this);	}	private void getData() {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {//					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, //							mContext.getResources().getString(R.string.get_dataing));//										OrderList tempList = null;										if (mCurrentView == 0) {						tempList = WeiYuanCommon.getWeiYuanInfo().accountSettleable(mShopType);					} else {						tempList = WeiYuanCommon.getWeiYuanInfo().accountHistory(mShopType);					}					mOrderList.clear();					mTotalPrice = 0;					if (tempList != null && tempList.size() > 0) {						mTotalPrice = tempList.totalPrice();						mOrderList.addAll(tempList.mOrderList);					}//					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_CHECK_STATE, tempList.mState);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();//					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.btn_settleable:			if (mCurrentView != 0) {				mHistoryButton.setBackgroundResource(R.color.settle_unselected_color);				mSettleableButton.setBackgroundResource(R.color.application_gray);				mCurrentView = 0;				getData();			}			break;		case R.id.btn_history:			if (mCurrentView != 1) {				mHistoryButton.setBackgroundResource(R.color.application_gray);				mSettleableButton.setBackgroundResource(R.color.settle_unselected_color);				mCurrentView = 1;				getData();			}			break;		case R.id.btn_settle:			applySettle();			break;		case R.id.btn_appeal:			Intent intent = new Intent();			intent.setClass(mContext, ShopOrderRetreatActivity.class);			intent.putExtra("openMode", 1);			startActivityForResult(intent, REQUEST_APPEAL);						break;		default:			break;		}	}	private void applySettle() {		final String indice = getSelectedOrderIndice();				if (indice != null && !indice.equals("")) {			if (!WeiYuanCommon.getNetWorkState()) {				mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);				return;			}			new Thread(){				public void run() {					try {//						WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, //								mContext.getResources().getString(R.string.get_dataing));						WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().applySettle(								mShopType,								indice);//						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, MSG_APPLY_SETTLE, state);					} catch (WeiYuanException e) {						e.printStackTrace();						WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 								mContext.getResources().getString(e.getStatusCode()));					} catch (Exception e) {						e.printStackTrace();//						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					}				};			}.start();		}	}	private String getSelectedOrderIndice() {		String indice = null;				if (mOrderList != null && mOrderList.size() > 0) {			String temp = "";						for (int i = 0; i < mOrderList.size(); i++) {				Order item = mOrderList.get(i);								if (item.selected) {					temp = temp + item.id + ",";				}			}						if (temp.length() > 1) {				indice = temp.substring(0, temp.length() - 1);			}		}				return indice;	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);				switch (requestCode) {		case REQUEST_APPEAL:			if (resultCode == RESULT_OK) {				if (data != null) {					String content = data.getStringExtra("reason");										if (content != null) {						doAppeal(content);					}				}			}			break;		default:			break;		}	}	private void doAppeal(final String content) {		if (content == null || content.equals("")) {			return;		}		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {//					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, //							mContext.getResources().getString(R.string.get_dataing));					WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().abnormalAppeal(							mShopType,							content);//					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, MSG_APPLY_SETTLE, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();//					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();			}	private OnItemClickListener mItemClickListener = new OnItemClickListener() {		@Override		public void onItemClick(AdapterView<?> parentListView,				View convertView, int position, long id) {			Order order = mOrderList.get(position);								Intent intent = new Intent();			intent.setClass(mContext, ShopOrderHandleActivity.class);			intent.putExtra("data", order);			intent.putExtra("position", position);			startActivityForResult(intent, REQUEST_ORDER_HANDLE);		}	};}