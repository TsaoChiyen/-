package com.chengxin.profile.shopping;import java.util.ArrayList;import java.util.List;  import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ListView;import android.widget.Toast;import com.chengxin.R;import com.chengxin.BaseActivity;import com.chengxin.ModifyPwdActivity;import com.chengxin.Entity.Login;import com.chengxin.Entity.Merchant;import com.chengxin.Entity.ShopInfoItem;import com.chengxin.Entity.ShopService;import com.chengxin.Entity.ShopServiceList;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.ShopInfoAdapter;import com.chengxin.adapter.ShopInfoAdapter.OnShopInfoClickListener;import com.chengxin.dialog.MMAlert;import com.chengxin.dialog.MMAlert.OnAlertSelectId;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;public class ShopInfoActivity extends BaseActivity {	protected static final int BANK_SETTING = 0x4230;	protected static final int ADD_SERVICE = 0x4231;	protected static final int SET_PASSWORD = 0x4232;	protected static final int MODIFY_PASSWORD = 0x4233;	protected static final int DELETE_SERVICE = 0x4234;	protected static final int SERVICELIST_OK = 0x4235;		private ListView mListView;    private ShopInfoAdapter mAdapter;        private List<ShopInfoItem> listData = new ArrayList<ShopInfoItem>();      private List<ShopInfoItem> listHeader  = new ArrayList<ShopInfoItem>();   	private List<ShopService> mServiceList = new ArrayList<ShopService>();        private Merchant mShop;	protected int mDelPos;		@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.shop_info_activity);		Login login = WeiYuanCommon.getLoginResult(mContext);		mShop = login.shopInfo;		setTitleContent(R.drawable.back_btn, R.drawable.ok, R.string.shop_info_maintain);		mLeftBtn.setOnClickListener(this);		mRightBtn.setOnClickListener(this);		mListView = (ListView)findViewById(R.id.list_shop);				requestServices();	}	private void requestServices() {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));										ShopServiceList serviceList = WeiYuanCommon.getWeiYuanInfo().serviceListWithShopId(mShop.id);					if (serviceList != null && serviceList.size() > 0) {						mServiceList.clear();						mServiceList.addAll(serviceList.mList);					}					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, SERVICELIST_OK, null);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		switch (requestCode) {		case BANK_SETTING: 			if (resultCode == RESULT_OK) {				mShop.bank = data.getStringExtra("bankname");				mShop.bankName = data.getStringExtra("bankuser");				mShop.bankCard = data.getStringExtra("bankcard");				int pos = data.getIntExtra("pos", 0);								if (pos > 0) {					ShopInfoItem item = (ShopInfoItem)mAdapter.getItem(pos);					item.action = null;					item = (ShopInfoItem)mAdapter.getItem(pos+1);					item.content = mShop.bank;										item = (ShopInfoItem)mAdapter.getItem(pos+2);					item.content = mShop.bankName;					item = (ShopInfoItem)mAdapter.getItem(pos+3);					item.content = mShop.bankCard;										Login login = WeiYuanCommon.getLoginResult(mContext);					login.shopInfo = mShop;					WeiYuanCommon.saveLoginResult(mContext, login);										mAdapter.notifyDataSetChanged();				}			}			break;		case ADD_SERVICE:			if (resultCode == RESULT_OK) {				ShopService service = (ShopService) data.getExtras().get("service");				int pos = data.getIntExtra("pos", 0);								if (pos > 0) {					ShopInfoItem item = new ShopInfoItem("客服名称\n账号",	            			String.format("%s\n%s", service.name, service.username), "DeleteService", false);					mAdapter.getListData().add(pos + 1, item);					mAdapter.notifyDataSetChanged();				}			}			break;					case SET_PASSWORD:		case MODIFY_PASSWORD:			if (resultCode == RESULT_OK) {				int pos = data.getIntExtra("pos", 0);								if (pos > 0) {					ShopInfoItem item = (ShopInfoItem) mAdapter.getItem(pos);					item.action = null;										item = (ShopInfoItem) mAdapter.getItem(pos + 1);					item.content = "已设置";					mAdapter.notifyDataSetChanged();					Login login = WeiYuanCommon.getLoginResult(mContext);					login.hasShopPass = 1;					WeiYuanCommon.saveLoginResult(mContext, login);				}			}			break;					default:			break;		}		super.onActivityResult(requestCode, resultCode, data);	}	private Handler mHandler = new Handler(){		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);						switch (msg.what) {			case SERVICELIST_OK:				getData();				break;			case DELETE_SERVICE:				WeiYuanState state = (WeiYuanState)msg.obj;								if(state == null ){					Toast.makeText(mContext,R.string.commit_data_error, Toast.LENGTH_LONG).show();				}				if (state.code == 0) {					mAdapter.getListData().remove(mDelPos);					mAdapter.notifyDataSetChanged();					String hintMsg = state.errorMsg;										if (hintMsg == null || hintMsg.equals("") ){						hintMsg = "成功删除客服";					}										Toast.makeText(mContext, hintMsg, Toast.LENGTH_LONG).show();				}else{					String hintMsg =state.errorMsg;										if (hintMsg == null || hintMsg.equals("") ) {						hintMsg = mContext.getResources().getString(R.string.commit_data_error);					}										Toast.makeText(mContext, hintMsg, Toast.LENGTH_LONG).show();				}				break;							default:				break;			}		}	};    /**     *  data contain four section:     *  1.  shop base information, at section head show notice, contain:     *      1.1 shop name     *      1.2 shop address     *      1.3 shop contact     *      1.4 phone of the contact     *      1.5 address of the contact     *  2.  shop's bank information, at section head show notice,contain:     *      2.1 bank name     *      2.2 bank user name     *      2.3 bank account number     *  3.  shop service list,contain several services.     *      At the sectiion head, put an icon on the right for add sevice.     *  4.  shop's independence password, only one data.     *     */    private void getData() {        if (mShop != null) {            // 1.  shop base information            getBaseInfo();            // 2.  shop's bank information            getBankInfo();            // 3.  shop service list            getServiceList();            // 4.  shop's independence password, only one data.            getPasswordState();        }    	        mAdapter = new ShopInfoAdapter(mContext, listData, listHeader);        mAdapter.setOnShopInfoClickListener(new OnShopInfoClickListener() {						@Override			public void onClick(String action, ShopInfoItem item, int position) {				if (action.equals("BankSetting")) {					Intent bankEditIntent = new Intent();					bankEditIntent.setClass(mContext, BankInfoActivity.class);					bankEditIntent.putExtra("pos", position);					startActivityForResult(bankEditIntent, BANK_SETTING);				} else if (action.equals("PasswordSetting")) {					Intent intent = new Intent();					intent.setClass(mContext, ModifyPwdActivity.class);					intent.putExtra("type", ModifyPwdActivity.PWD_SETTING);					intent.putExtra("passtype", ModifyPwdActivity.SHOPPING_PWD);					intent.putExtra("pos", position);					startActivityForResult(intent, SET_PASSWORD);				} else if (action.equals("AddService")) {					Intent intent = new Intent();					intent.setClass(mContext, AddShopServiceActivity.class);					intent.putExtra("pos", position);					startActivityForResult(intent, ADD_SERVICE);				} else if (action.equals("DeleteService")) {					ShopInfoItem item1 = listData.get(position);										if (item1.obj != null && item1.obj instanceof ShopService) {						final ShopService service = (ShopService) item1.obj;						mDelPos = position;						MMAlert.showAlert(mContext, "是否确定要删除 "+ service.name +" 客服？",								mContext.getResources().getStringArray(R.array.confirm_item), 								null, new OnAlertSelectId() {							@Override							public void onClick(int whichButton) {								switch (whichButton) {								case 0://确定删除									deleteService(service);									break;															default:									break;								}							}						});					}				}			}		});    	        mListView.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> arg0, View arg1, int position,					long arg3) {				ShopInfoItem item = listData.get(position);								if (item.title.equals("独立密码")) {					Intent intent = new Intent();					intent.setClass(mContext, ModifyPwdActivity.class);					intent.putExtra("type", ModifyPwdActivity.PWD_MODIFY);					intent.putExtra("passtype", ModifyPwdActivity.SHOPPING_PWD);					intent.putExtra("pos", position);					startActivityForResult(intent, MODIFY_PASSWORD);				}			}		});        mListView.setAdapter(mAdapter);    }        protected void deleteService(final ShopService service) {    	if (service == null)    		return;    	if (service.id == null || service.id.equals("") ||    			service.id.equals("0") || service.id.equals("null"))    		return;    			if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}				new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.send_request));					WeiYuanState state = null;					state = WeiYuanCommon.getWeiYuanInfo().delServiceOfShop(service.id);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, DELETE_SERVICE, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				}catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();			}	/**     *  1.  shop base information, at section head show notice, contain:     *      1.1 shop name     *      1.2 shop address     *      1.3 shop contact     *      1.4 phone of the contact     *      1.5 address of the contact     */    private void getBaseInfo() {    	ShopInfoItem item =new ShopInfoItem("基本信息", "一旦设定，不可自主修改，提交资料申请变更。", null, false);        listHeader.add(item);        listData.add(item);                item = new ShopInfoItem("商户名称", mShop.name, null, false);        listData.add(item);        item = new ShopInfoItem("商户地址", mShop.address, null, false);        listData.add(item);        item = new ShopInfoItem("联系人", mShop.username, null, false);        listData.add(item);    	item = new ShopInfoItem("联系电话", mShop.phone, null, false);        listData.add(item);    	item = new ShopInfoItem("联系地址", mShop.useraddress, null, false);        listData.add(item);    }        /**     *  2.  shop's bank information, at section head show notice,contain:     *      2.1 bank name     *      2.2 bank user name     *      2.3 bank account number     */    private void getBankInfo() {    	ShopInfoItem item = null;    	    	if (mShop.bank == null || mShop.bank.length() == 0 || mShop.bank.equals("null")) {        	item = new ShopInfoItem("银行信息", "一旦设定，不可自主修改，申请变更。", "BankSetting", false);    	} else {        	item = new ShopInfoItem("银行信息", "一旦设定，不可自主修改，申请变更。", null, false);    	}    	listHeader.add(item);        listData.add(item);            	item = new ShopInfoItem("开户银行", mShop.bank, null, false);        listData.add(item);    	item = new ShopInfoItem("户名", mShop.bankName, null, false);        listData.add(item);    	item = new ShopInfoItem("账号", mShop.bankCard, null, false);        listData.add(item);    }        /**     *  3.  shop service list,contain several services.     *      At the sectiion head, put an icon on the right for add sevice.     */    private void getServiceList() {    	ShopInfoItem item = new ShopInfoItem("客服信息", null, "AddService", false);        listHeader.add(item);        listData.add(item);                if (mServiceList != null && mServiceList.size() > 0) {        	for (ShopService service : mServiceList) {            	item = new ShopInfoItem("客服名称\n账号",            			String.format("%s\n%s", service.name, service.username), "DeleteService", false);            	item.obj = service;            	                listData.add(item);        	}        }    }        /**      *  4.  shop's independence password, only one data.     */    private void getPasswordState() {    	ShopInfoItem item = null;    	String status = null;		Login login = WeiYuanCommon.getLoginResult(mContext);		    	if (login.hasShopPass == 1) {        	item = new ShopInfoItem("商城独立密码", null, null, false);        	status = "已设置";    	} else {        	item = new ShopInfoItem("商城独立密码", null, "PasswordSetting", false);        	status = "未设置";    	}    	listHeader.add(item);        listData.add(item);    	item = new ShopInfoItem("独立密码", status, null, login.hasShopPass == 1);        listData.add(item);    }    	@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.right_btn:			this.finish();			break;		default:			break;		}	}}