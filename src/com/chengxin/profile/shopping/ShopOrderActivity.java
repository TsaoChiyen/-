package com.chengxin.profile.shopping;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.widget.AbsListView;import android.widget.AdapterView;import android.widget.Button;import android.widget.LinearLayout;import android.widget.ProgressBar;import android.widget.Toast;import android.widget.AbsListView.OnScrollListener;import android.widget.AdapterView.OnItemClickListener;import android.widget.ListView;import android.widget.TextView;import com.chengxin.R;import com.chengxin.BaseActivity;import com.chengxin.Entity.Order;import com.chengxin.Entity.OrderList;import com.chengxin.Entity.PopItem;import com.chengxin.Entity.StatusMenu;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.ShopOrderAdapter;import com.chengxin.global.GlobalParam;import com.chengxin.global.WeiYuanCommon;import com.chengxin.map.BMapApiApp;import com.chengxin.net.WeiYuanException;import com.chengxin.widget.PopWindows;import com.chengxin.widget.PopWindows.PopWindowsInterface;public class ShopOrderActivity extends BaseActivity {	protected static final int REQUEST_ORDER_HANDLE = 0x9001;	private List< Order > mOrderList = new ArrayList<Order>();	private ListView listView;	private int mPage = 1;	private int mStatus = 0;		private LinearLayout mFootView;	private LinearLayout mToolBarLayout;	private Button mStatusButton;	private PopWindows mPopWindows;	private List<PopItem> mStatusMenuList;	private TextView mCurrentStatus;	private TextView mUnhandleStatus;	private TextView mExceptStatus;	private boolean mNoMore = false;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.shop_order_activity);		initComponent();		        listView = (ListView)findViewById(R.id.order_list);		listView.setOnItemClickListener(mItemClickListener);		listView.setOnScrollListener(new OnScrollListener() {						@Override			public void onScrollStateChanged(AbsListView view, int scrollState) {				switch (scrollState) {				case OnScrollListener.SCROLL_STATE_IDLE://处理加载更多									if(view.getLastVisiblePosition() == (view.getCount()-1) && !mNoMore){						if (WeiYuanCommon.verifyNetwork(mContext)){							mHandler.sendEmptyMessage(GlobalParam.SHOW_LOADINGMORE_INDECATOR);						}else{							Toast.makeText(mContext, mContext.getString(R.string.network_error), Toast.LENGTH_SHORT).show();						}					}					break;				default:					break;				}			}						@Override			public void onScroll(AbsListView view, int firstVisibleItem,					int visibleItemCount, int totalItemCount) {							}		});                if (mOrderList != null && mOrderList.size() > 0) {        	mOrderList.clear();        }                getData(GlobalParam.LIST_LOAD_FIRST);	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_LOADINGFIRST_DATA:				OrderList list = (OrderList)msg.obj;								if (list == null) {					return;				}								WeiYuanState state = list.mState;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(state.code == 0){					mOrderList.clear();					if (list != null && list.size() > 0) {						if (list.mPageInfo != null) {							mNoMore = list.mPageInfo.hasMore == 0;						}												mOrderList.addAll(list.mOrderList);					}										showData();				} else {					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				}				break;							case GlobalParam.SHOW_LOADINGMORE_INDECATOR:				if (mFootView == null) {					mFootView = (LinearLayout) LayoutInflater.from(mContext)							.inflate(R.layout.hometab_listview_footer, null);				}							if (listView.getFooterViewsCount() == 0) {					listView.addFooterView(mFootView);					}								ProgressBar pb = (ProgressBar)mFootView.findViewById(R.id.hometab_addmore_progressbar);				pb.setVisibility(View.VISIBLE);		 						TextView more = (TextView)mFootView.findViewById(R.id.hometab_footer_text);				more.setText(BMapApiApp.getInstance().getResources().getString(R.string.add_more_loading));		 		getData(GlobalParam.LIST_LOAD_MORE);				break;			case GlobalParam.HIDE_LOADINGMORE_INDECATOR:				list = (OrderList)msg.obj;								if (list == null) {					return;				}								state = list.mState;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(state.code == 0){					if (list != null && list.size() > 0) {						if (list.mPageInfo != null) {							mNoMore = list.mPageInfo.hasMore == 0;						}												mOrderList.addAll(list.mOrderList);					}										showData();				} else {					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				}								if (listView.getFooterViewsCount() != 0) {					listView.removeFooterView(mFootView);				}					if (mAdapter != null){					mAdapter.notifyDataSetChanged();				}								break;			}		}	};	private ShopOrderAdapter mAdapter;		protected void showData() {		if (mAdapter == null) {			mAdapter = new ShopOrderAdapter(mContext, mOrderList);			listView.setAdapter(mAdapter);		} else {			mAdapter.notifyDataSetChanged();		}		showCurrentStatus();		showUnhandleStatus();		showExceptStatus();	}	private void showCurrentStatus() {		mCurrentStatus.setText(String.format("%s%n%d个订单",				StatusMenu.getStatusStringById(String.valueOf(mStatus).toString()), mOrderList.size()));	}	private void showUnhandleStatus() {		mUnhandleStatus.setText("未处理\n0个订单");	}	private void showExceptStatus() {		mExceptStatus.setText("异常\n0个订单");	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, 0, R.string.shop_order_manager);        mLeftBtn.setOnClickListener(this);                mToolBarLayout = (LinearLayout) findViewById(R.id.tool_bar_layout);        mStatusButton = (Button)findViewById(R.id.status_btn);        mStatusButton.setOnClickListener(this);                mCurrentStatus = (TextView)findViewById(R.id.curr_status);        mUnhandleStatus = (TextView)findViewById(R.id.unhandle_status);        mExceptStatus = (TextView)findViewById(R.id.except_status);                mStatusMenuList = (List<PopItem>) StatusMenu.getPopMenuList();        mPopWindows = new PopWindows(mContext, mStatusMenuList, mToolBarLayout, new PopWindowsInterface() {			@Override			public void onItemClick(int dataId, int position, View view) {				mStatus = dataId;				Log.i("DataID", String.valueOf(dataId));				mStatusButton.setText(mStatusMenuList.get(position).option);				getData(GlobalParam.LIST_LOAD_REFERSH);			}        });	}	private void getData(final int loadType) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					switch (loadType) {					case GlobalParam.LIST_LOAD_FIRST:					case GlobalParam.LIST_LOAD_REFERSH:						WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 								mContext.getResources().getString(R.string.get_dataing));						mPage = 1;						break;					case GlobalParam.LIST_LOAD_MORE:						if(!mNoMore){							mPage += 1;		    			}						break;					}										OrderList tempList = WeiYuanCommon.getWeiYuanInfo().getOrderList(							mPage,							mStatus,							1);										if (loadType == GlobalParam.LIST_LOAD_MORE) {						WeiYuanCommon.sendMsg(mHandler, GlobalParam.HIDE_LOADINGMORE_INDECATOR, tempList);					} else {						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_LOADINGFIRST_DATA, tempList);					}				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.status_btn:			mPopWindows.showGroupPopView(mStatusMenuList,					Gravity.LEFT,					R.drawable.no_top_arrow_bg,					R.color.white,					0);			break;		default:			break;		}	}	@Override	protected void onActivityResult(int arg0, int arg1, Intent arg2) {		super.onActivityResult(arg0, arg1, arg2);	}	private OnItemClickListener mItemClickListener = new OnItemClickListener() {		@Override		public void onItemClick(AdapterView<?> parentListView,				View convertView, int position, long id) {			Order order = mOrderList.get(position);								Intent intent = new Intent();			intent.setClass(mContext, ShopOrderHandleActivity.class);			intent.putExtra("data", order);			intent.putExtra("position", position);			startActivityForResult(intent, REQUEST_ORDER_HANDLE);		}	};}