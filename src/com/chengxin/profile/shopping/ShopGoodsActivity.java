package com.chengxin.profile.shopping;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.util.Log;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.widget.AdapterView;import android.widget.AbsListView.OnScrollListener;import android.widget.AdapterView.OnItemClickListener;import android.widget.AbsListView;import android.widget.Button;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.R;import com.chengxin.SendGoodsActivity;import com.chengxin.Entity.Goods;import com.chengxin.Entity.MerchantMenu;import com.chengxin.Entity.OrderList;import com.chengxin.Entity.PopItem;import com.chengxin.Entity.ShopGoodsList;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.ShopGoodsAdapter;import com.chengxin.adapter.ShopOrderAdapter;import com.chengxin.adapter.ShopGoodsAdapter.OnShopGoodsClickListener;import com.chengxin.dialog.MMAlert;import com.chengxin.dialog.MMAlert.OnAlertSelectId;import com.chengxin.global.GlobalParam;import com.chengxin.global.WeiYuanCommon;import com.chengxin.map.BMapApiApp;import com.chengxin.net.WeiYuanException;import com.chengxin.widget.PopWindows;import com.chengxin.widget.PopWindows.PopWindowsInterface;public class ShopGoodsActivity extends BaseActivity {	private static final int REQUEST_GOODS_EDIT = 0x0800;	private static final int REQUEST_GOODS_ADD = 0x8001;	protected static final int DELETE_GOODS = 0x8003;	private ListView listView;	private int mCategoryid = 0;	private int mStatus = 0;	private List < Goods > mGoodsList = new ArrayList<Goods>();	private ShopGoodsAdapter mAdapter;	ShopGoodsAdapter.ViewHolder mHolder = null;		private List<PopItem> mCategoryMenuList;	private PopWindows mPopWindows;	private LinearLayout mToolBarLayout;	private Button mCategoryButton;	private int mDelPos;	protected boolean mNoMore;	protected int mPage;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.shop_goods_activity);		initComponent();		        listView = (ListView)findViewById(R.id.goods_list);		listView.setOnItemClickListener(mItemClickListener);		listView.setOnScrollListener(new OnScrollListener() {						@Override			public void onScrollStateChanged(AbsListView view, int scrollState) {				switch (scrollState) {				case OnScrollListener.SCROLL_STATE_IDLE://处理加载更多									if(view.getLastVisiblePosition() == (view.getCount()-1) && !mNoMore){						if (WeiYuanCommon.verifyNetwork(mContext)){							mHandler.sendEmptyMessage(GlobalParam.SHOW_LOADINGMORE_INDECATOR);						}else{							Toast.makeText(mContext, mContext.getString(R.string.network_error), Toast.LENGTH_SHORT).show();						}					}					break;				default:					break;				}			}						@Override			public void onScroll(AbsListView view, int firstVisibleItem,					int visibleItemCount, int totalItemCount) {							}		});        if (mGoodsList != null && mGoodsList.size() > 0) {        	mGoodsList.clear();        }                getData(GlobalParam.LIST_LOAD_FIRST);	}	private void getData(final int loadType) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					switch (loadType) {					case GlobalParam.LIST_LOAD_FIRST:					case GlobalParam.LIST_LOAD_REFERSH:						WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 								mContext.getResources().getString(R.string.get_dataing));						mPage = 1;						break;					case GlobalParam.LIST_LOAD_MORE:						if(!mNoMore){							mPage += 1;		    			}						break;					}					ShopGoodsList tempList = WeiYuanCommon.getWeiYuanInfo().getShopGoosList(							mPage,							mCategoryid,							mStatus);					if (loadType == GlobalParam.LIST_LOAD_MORE) {						WeiYuanCommon.sendMsg(mHandler, GlobalParam.HIDE_LOADINGMORE_INDECATOR, tempList);					} else {						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_LOADINGFIRST_DATA, tempList);					}				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	private OnItemClickListener mItemClickListener = new OnItemClickListener() {        /**         * listview 子项点击事件         */        @Override        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {        	ShopGoodsAdapter.ViewHolder holder = (ShopGoodsAdapter.ViewHolder) view.getTag();			if (holder != null && mHolder != holder) {	        	if (mHolder != null) {					mHolder.mBtnLayout.setVisibility(View.INVISIBLE);	        	}        					holder.mBtnLayout.setVisibility(View.VISIBLE);								mHolder = holder;			}        }    };	protected LinearLayout mFootView;	private Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_LOADINGFIRST_DATA:				ShopGoodsList list = (ShopGoodsList)msg.obj;								if (list == null) {					return;				}								WeiYuanState state = list.mState;				if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(state.code == 0){					mGoodsList.clear();										if (list != null && list.size() > 0) {						if (list.mPageInfo != null) {							mNoMore = list.mPageInfo.hasMore == 0;						}												mGoodsList.addAll(list.mList);					}										showData();				} else {					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				}				break;							case GlobalParam.SHOW_LOADINGMORE_INDECATOR:				if (mFootView == null) {					mFootView = (LinearLayout) LayoutInflater.from(mContext)							.inflate(R.layout.hometab_listview_footer, null);				}							if (listView.getFooterViewsCount() == 0) {					listView.addFooterView(mFootView);					}								ProgressBar pb = (ProgressBar)mFootView.findViewById(R.id.hometab_addmore_progressbar);				pb.setVisibility(View.VISIBLE);		 						TextView more = (TextView)mFootView.findViewById(R.id.hometab_footer_text);				more.setText(BMapApiApp.getInstance().getResources().getString(R.string.add_more_loading));		 		getData(GlobalParam.LIST_LOAD_MORE);				break;			case GlobalParam.HIDE_LOADINGMORE_INDECATOR:				list = (ShopGoodsList)msg.obj;								if (list == null) {					return;				}								state = list.mState;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(state.code == 0){					if (list != null && list.size() > 0) {						if (list.mPageInfo != null) {							mNoMore = list.mPageInfo.hasMore == 0;						}												mGoodsList.addAll(list.mList);					}										showData();				} else {					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				}								if (listView.getFooterViewsCount() != 0) {					listView.removeFooterView(mFootView);				}					if (mAdapter != null){					mAdapter.notifyDataSetChanged();				}								break;			case DELETE_GOODS:				state = (WeiYuanState)msg.obj;								if(state == null ){					Toast.makeText(mContext,R.string.commit_data_error, Toast.LENGTH_LONG).show();				}				if (state.code == 0) {					mGoodsList.remove(mDelPos);					mAdapter.notifyDataSetChanged();					String hintMsg = state.errorMsg;										if (hintMsg == null || hintMsg.equals("") ){						hintMsg = "商品已成功删除";					}										Toast.makeText(mContext, hintMsg, Toast.LENGTH_LONG).show();				}else{					String hintMsg =state.errorMsg;										if (hintMsg == null || hintMsg.equals("") ) {						hintMsg = mContext.getResources().getString(R.string.commit_data_error);					}										Toast.makeText(mContext, hintMsg, Toast.LENGTH_LONG).show();				}				break;			default:				break;			}		}			};		private OnShopGoodsClickListener mShopGoodsItemListener = new OnShopGoodsClickListener() {		@Override		public void onClick(int action, final Goods item, int position) {			switch (action) {			case ShopGoodsAdapter.SHOP_GOODS_EDIT:				Intent intent = new Intent();				intent.setClass(mContext, SendGoodsActivity.class);				intent.putExtra("goods", item);				intent.putExtra("openMode", 1);				intent.putExtra("position", position);				startActivityForResult(intent, REQUEST_GOODS_EDIT);				break;			case ShopGoodsAdapter.SHOP_GOODS_DELETE:				if (item != null) {					mDelPos = position;					MMAlert.showAlert(mContext, "是否确定要删除 "+ item.name +" 商品？",							mContext.getResources().getStringArray(R.array.confirm_item), 							null, new OnAlertSelectId() {						@Override						public void onClick(int whichButton) {							switch (whichButton) {							case 0://确定删除								deleteGoods(item);								break;													default:								break;							}						}					});				}								break;			default:				break;			}		}			};	private void deleteGoods(Goods item) {    	if (item == null)    		return;    	if (item.id == null || item.id.equals("") ||    			item.id.equals("0") || item.id.equals("null"))    		return;    			if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}				final List<String> list = new ArrayList<String>();		list.add(item.id);				new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.send_request));					WeiYuanState state = null;					state = WeiYuanCommon.getWeiYuanInfo().deleteGoods(list);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, DELETE_GOODS, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				}catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();			}	private void initComponent() {		setTitleContent(R.drawable.back_btn, R.drawable.add_icon_btn, R.string.shop_goods);        mLeftBtn.setOnClickListener(this);        mRightBtn.setOnClickListener(this);                mToolBarLayout = (LinearLayout) findViewById(R.id.toolbar_layout);        mCategoryButton = (Button)findViewById(R.id.shop_category);        mCategoryButton.setOnClickListener(this);                mCategoryMenuList = (List<PopItem>) MerchantMenu.getPopMenuList();        mPopWindows = new PopWindows(mContext, mCategoryMenuList, mToolBarLayout, new PopWindowsInterface() {			@Override			public void onItemClick(int dataId, int position, View view) {				mCategoryid = dataId;				Log.i("DataID", String.valueOf(dataId));				mCategoryButton.setText(mCategoryMenuList.get(position).option);				getData(GlobalParam.LIST_LOAD_REFERSH);			}        });        	}	public void showData() {		if (mAdapter == null) {			mAdapter = new ShopGoodsAdapter(mContext, mGoodsList);			mAdapter.setOnShopGoodsClickListener(mShopGoodsItemListener);			listView.setAdapter(mAdapter);		} else {			mAdapter.notifyDataSetChanged();		}	}	@Override	public void onClick(View v) {		super.onClick(v);				switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.right_btn:			Intent intent = new Intent();			intent.setClass(mContext, SendGoodsActivity.class);			intent.putExtra("openMode", 0);			startActivityForResult(intent, REQUEST_GOODS_ADD);			break;					case R.id.shop_category:			mPopWindows.showGroupPopView(mCategoryMenuList,					Gravity.LEFT,					R.drawable.no_top_arrow_bg,					R.color.white,					0);			break;		default:			break;		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);				switch (requestCode) {		case REQUEST_GOODS_EDIT:			if (resultCode == RESULT_OK) {				Goods item = (Goods) data.getExtras().get("data");				int position = data.getIntExtra("position", -1);								if (item != null && position >= 0) {					mGoodsList.set(position, item);					mAdapter.notifyDataSetChanged();				}			}			break;		case REQUEST_GOODS_ADD:			if (resultCode == RESULT_OK) {				Goods item = (Goods) data.getExtras().get("data");								if (item != null) {					mGoodsList.add(0, item);					mAdapter.notifyDataSetChanged();				} else {					getData(GlobalParam.LIST_LOAD_REFERSH);				}			}			break;					default:			break;		}	}}