package com.chengxin.profile.shopping;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.ImageButton;import android.widget.ListAdapter;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.ChatMainActivity;import com.chengxin.R;import com.chengxin.Entity.Login;import com.chengxin.Entity.LoginResult;import com.chengxin.Entity.Order;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.OrderGoodsAdapter;import com.chengxin.global.GlobalParam;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;public class ShopOrderHandleActivity extends BaseActivity {	private static final int REQUEST_DELIVERY = 0x9005;	private static final int REQUEST_RETREAT = 0x9004;	private Order mOrder;	private TextView mOrderSnText;	private ListView mGoodsList;	private TextView mOrderCusumerName;	private TextView mOrderCosumerPhone;	private ImageButton mBtnChat;	private ImageButton mBtnCall;	private TextView mOrderCosumerAddress;	private TextView mOrderCosumerContent;	private Button mOrderBtnDeliver;	private Button mOrderBtnRetreate;	private Button mOrderBtnLog;	private OrderGoodsAdapter mAdapter;	private int mPosition = -1;	private boolean mModified = false;	private TextView mTotalCount;	private TextView mTotalPrice;	private int mShopType = 0;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.shop_order_handler_activity);		initComponent();		getData();	}	private void initComponent() {		mOrder = (Order)getIntent().getExtras().get("data");		mPosition = getIntent().getIntExtra("position", -1);		setTitleContent(R.drawable.back_btn, 0, R.string.shop_order_handle);        mLeftBtn.setOnClickListener(this);	        mOrderSnText = (TextView)findViewById(R.id.order_sn);                mGoodsList = (ListView)findViewById(R.id.goods_list);                mTotalCount = (TextView)findViewById(R.id.total_count);        mTotalPrice = (TextView)findViewById(R.id.total_price);                mOrderCusumerName = (TextView)findViewById(R.id.order_cusumer_name);        mOrderCosumerPhone = (TextView)findViewById(R.id.order_cosumer_phone);                mBtnChat = (ImageButton)findViewById(R.id.btn_chat);        mBtnCall = (ImageButton)findViewById(R.id.btn_call);                mOrderCosumerAddress = (TextView)findViewById(R.id.order_cosumer_address);        mOrderCosumerContent = (TextView)findViewById(R.id.order_cosumer_content);                mOrderBtnDeliver = (Button)findViewById(R.id.order_btn_deliver);        mOrderBtnRetreate = (Button)findViewById(R.id.order_btn_retreate);        mOrderBtnLog = (Button)findViewById(R.id.order_btn_log);                mBtnChat.setOnClickListener(this);        mBtnCall.setOnClickListener(this);        mOrderBtnDeliver.setOnClickListener(this);        mOrderBtnRetreate.setOnClickListener(this);        mOrderBtnLog.setOnClickListener(this);	}		private void getData() {		if (mOrder != null) {			mOrderSnText.setText(String.format("订单:%s", mOrder.ordersn));			mOrderCusumerName.setText(mOrder.username);			mOrderCosumerPhone.setText(mOrder.phone);			mOrderCosumerAddress.setText(mOrder.address);			mOrderCosumerContent.setText(mOrder.content);						mTotalCount.setText(String.format("共计:%d 件商品", mOrder.totalCount));			mTotalPrice.setText(String.format("总计金额: %.2f", mOrder.totalPrice));						if (mOrder.goods != null && mOrder.goods.size() > 0) {				mAdapter = new OrderGoodsAdapter(mContext, mOrder.goods);				mGoodsList.setAdapter(mAdapter);				setListViewHeightBasedOnChildren(mGoodsList);			}		}	}	/**	* @param listView	*/	private void setListViewHeightBasedOnChildren(ListView listView) {		ListAdapter listAdapter = listView.getAdapter();				if (listAdapter == null) {			return;		}		  		int totalHeight = 0;				for (int i = 0; i < listAdapter.getCount(); i++) {			View listItem = listAdapter.getView(i, null, listView);			listItem.measure(0, 0);			totalHeight += listItem.getMeasuredHeight();		}		  		ViewGroup.LayoutParams params = listView.getLayoutParams();		params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));		listView.setLayoutParams(params);	}	@Override	public void onClick(View v) {		super.onClick(v);				Intent intent = null;				switch (v.getId()) {		case R.id.left_btn:			if (mModified) {				intent = new Intent();				if (intent != null)  {					intent.putExtra("position", mPosition);					setResult(RESULT_OK, intent);				}			}			this.finish();			break;		case R.id.btn_chat:			beginChatWithUid(mOrder.uid);			break;		case R.id.btn_call:			intent = new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + mOrder.phone));			if (intent != null) startActivity(intent);			break;		case R.id.order_btn_deliver:			intent = new Intent();			if (intent != null)  {				intent.setClass(mContext, ShopOrderDeliveryActivity.class);				if (intent != null) {					startActivityForResult(intent, REQUEST_DELIVERY);				}			}			break;		case R.id.order_btn_retreate:			intent = new Intent();			if (intent != null)  {				intent.setClass(mContext, ShopOrderRetreatActivity.class);				startActivityForResult(intent, REQUEST_RETREAT);			}						break;		case R.id.order_btn_log:			intent = new Intent();			if (intent != null)  {				intent.setClass(mContext, ShopOrderLogisticsTraceActivity.class);				startActivity(intent);			}			break;		default:			break;		}	}	private void beginChatWithUid(final String uid) {		if (uid != null && !uid.equals("")) {			if (!WeiYuanCommon.getNetWorkState()) {				mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);				return;			}			new Thread(){				public void run() {					try {//						WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, //								mContext.getResources().getString(R.string.get_dataing));						LoginResult user = WeiYuanCommon.getWeiYuanInfo().getUserInfo(uid);//						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);						WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_GET_CONTACT_DATA, user);					} catch (WeiYuanException e) {						e.printStackTrace();						WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 								mContext.getResources().getString(e.getStatusCode()));					} catch (Exception e) {						e.printStackTrace();//						mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					}				};			}.start();		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);				switch (requestCode) {		case REQUEST_DELIVERY:			if (resultCode == RESULT_OK) {				String company = data.getStringExtra("log_company");				String sn = data.getStringExtra("log_sn");								if (company != null && sn != null) {					commitDelivery(company, sn);				}			}						break;		case REQUEST_RETREAT:			if (resultCode == RESULT_OK) {				if (data != null) {					String reason = data.getStringExtra("reason");					if (reason != null) {						commitRetreat(reason);					}				}			}						break;		}	}	private void commitRetreat(final String reason) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().retreatOrder(							mShopType ,							mOrder.id,							reason);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_CHECK_STATE, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	private void commitDelivery(final String company, final String sn) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					WeiYuanState state = WeiYuanCommon.getWeiYuanInfo().deliveryOrder(							mShopType,							mOrder.id,							company,							sn);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_CHECK_STATE, state);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	private Handler mHandler = new Handler() {				@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_CHECK_STATE:				WeiYuanState state = (WeiYuanState)msg.obj;								if(state == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if (state.errorMsg != null && state.errorMsg.length() > 0)					Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();				break;			case GlobalParam.MSG_GET_CONTACT_DATA:				LoginResult login = (LoginResult)msg.obj;								if(login == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								Toast.makeText(mContext, login.mState.errorMsg,Toast.LENGTH_LONG).show();				if(login.mState.code == 0){					Login user = login.mLogin;										if(user != null){						Intent intent = new Intent(mContext, ChatMainActivity.class);						user.mIsRoom = 100;						intent.putExtra("data", user);						startActivity(intent);						ShopOrderHandleActivity.this.finish();					}				}				break;							default:				break;			}		}	};}