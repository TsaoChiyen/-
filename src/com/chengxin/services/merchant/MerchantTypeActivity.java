package com.chengxin.services.merchant;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.CompoundButton.OnCheckedChangeListener;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.chengxin.BaseActivity;import com.chengxin.GoodsTypeActivity;import com.chengxin.R;import com.chengxin.Entity.MerchantCategory;import com.chengxin.Entity.MerchantMenu;import com.chengxin.global.GlobalParam;import com.chengxin.global.ImageLoader;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;public class MerchantTypeActivity extends BaseActivity {	private LinearLayout mMenuLayout;	private List<MerchantCategory> mMenuList = new ArrayList<MerchantCategory>();	private List<MerchantCategory> selectList = new ArrayList<MerchantCategory>();	protected int mShopType = 0;	private int merchantType = 0;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		if (getIntent().hasExtra("merchantType")) {			merchantType = getIntent().getIntExtra("merchantType", 0);		}		setContentView(R.layout.goods_type_view);		initCompent();		getMerchantType();	}	private void initCompent(){		setTitleContent(R.drawable.back_btn,R.drawable.ok_btn,R.string.goods_type);		mLeftBtn.setOnClickListener(this);		mRightBtn.setOnClickListener(this);		mMenuLayout = (LinearLayout)findViewById(R.id.menu_layout);	}	private void getMerchantType(){		if (MerchantCategory.hasData()) {			mMenuList.clear();			mMenuList.addAll(MerchantCategory.getMenuList(merchantType));			initMenu();			return;		}				if(!WeiYuanCommon.getNetWorkState()){			mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG,							mContext.getResources().getString(R.string.get_dataing));					MerchantCategory merchantMenu =	WeiYuanCommon.getWeiYuanInfo().getMerchantCategory();					WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_SHOW_MERCHANT_MENU_TYPE, merchantMenu);					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_TICE_OUT_EXCEPTION,							mContext.getResources().getString(e.getStatusCode()));				}catch (Exception e) {					e.printStackTrace();					mHandler.sendEmptyMessage(GlobalParam.HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	/*初始化菜单*/	private void initMenu(){		if(mMenuLayout != null && mMenuLayout.getChildCount() >0){			mMenuLayout.removeAllViews();		}				for (int i = 0; i < mMenuList.size(); i++) {			View view = LayoutInflater.from(mContext).inflate(R.layout.merchant_category_item, null);			TextView menuTextView = (TextView)view.findViewById(R.id.menu_name);			final CheckBox menuCheckBox = (CheckBox)view.findViewById(R.id.checkBox1);						final MerchantCategory item = mMenuList.get(i);			menuTextView.setText(mMenuList.get(i).name);						menuCheckBox.setOnCheckedChangeListener(new OnCheckedChangeListener() {								@Override				public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {					if (isChecked) {						selectList.add(item);					} else {						selectList.remove(item);					}				}			});						view.setOnClickListener(new OnClickListener() {								@Override				public void onClick(View v) {					menuCheckBox.setChecked(menuCheckBox.isChecked());				}			});						mMenuLayout.addView(view);		}	}	@Override	public void onClick(View v) {		super.onClick(v);		switch (v.getId()) {		case R.id.left_btn:			MerchantTypeActivity.this.finish();			break;		case R.id.right_btn:			commit();			break;		default:			break;		}	}	private void commit() {		String ids = "";		String names = "";				for (int i = 0; i < selectList.size(); i++) {			if (i > 0) {				ids += ",";				names += ";";			}						ids += selectList.get(i).id;			names += selectList.get(i).name;		}		Intent intent = new Intent();		intent.putExtra("selectedIds", ids);		intent.putExtra("selectedNames", names);		setResult(RESULT_OK, intent);		MerchantTypeActivity.this.finish();	}		private Handler mHandler = new Handler(){		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_SHOW_MERCHANT_MENU_TYPE:				if (MerchantCategory.hasData()) {					mMenuList.addAll(MerchantCategory.getMenuList(merchantType));					initMenu();				}				break;			default:				break;			}		}	};}