package com.chengxin.services;import java.util.ArrayList;import java.util.List;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.LayoutInflater;import android.view.View;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import com.chengxin.BaseActivity;import com.chengxin.ChatMainActivity;import com.chengxin.R;import com.chengxin.Entity.Demand;import com.chengxin.Entity.DemandList;import com.chengxin.Entity.Login;import com.chengxin.Entity.LoginResult;import com.chengxin.Entity.WeiYuanState;import com.chengxin.adapter.DemandAdapter;import com.chengxin.global.GlobalParam;import com.chengxin.global.WeiYuanCommon;import com.chengxin.net.WeiYuanException;import com.chengxin.profile.shopping.ShopOrderRetreatActivity;import com.chengxin.widget.DemandSearchDialog;public class DemandActivity extends BaseActivity implements OnItemClickListener {	protected static final int MSG_DEMAND_LIST = 0x7948;	protected static final int MSG_DEMAND_ADDED = 0x7949;	private static final int REQUEST_ADD_DEMAND = 0x7950;		private LinearLayout mListFooter;	private ListView mListView;	private TextView mFooterText;	private int mPage;	private String mKey;	private List < Demand > mList = new ArrayList<Demand >();	private DemandAdapter mAdapter;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mContext = this;		setContentView(R.layout.services_require_activity);		initComponent();		getData();	}	private void initComponent() {		setTitleContent(R.drawable.back_btn, true, true, false, R.string.demand_main_title);		mLeftBtn.setOnClickListener(this);		mSearchBtn.setOnClickListener(this);		mAddBtn.setOnClickListener(this);				mListFooter = (LinearLayout)LayoutInflater.from(mContext).inflate(R.layout.services_require_footer, null);		mFooterText = (TextView)mListFooter.findViewById(R.id.sumary);		mListView = (ListView)findViewById(R.id.list);		mListView.addFooterView(mListFooter);		mListView.setOnItemClickListener(this);	}	private void getData() {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					WeiYuanCommon.sendMsg(mBaseHandler, BASE_SHOW_PROGRESS_DIALOG, 							mContext.getResources().getString(R.string.get_dataing));					DemandList tempList = WeiYuanCommon.getWeiYuanInfo().getDemand(							mPage,							mKey,							String.valueOf(WeiYuanCommon.getCurrentLat(mContext)),							String.valueOf(WeiYuanCommon.getCurrentLng(mContext)));					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);					WeiYuanCommon.sendMsg(mHandler, MSG_DEMAND_LIST, tempList);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();					mBaseHandler.sendEmptyMessage(BASE_HIDE_PROGRESS_DIALOG);				}			};		}.start();	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_GET_CONTACT_DATA:				LoginResult login = (LoginResult)msg.obj;								if(login == null){					Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();					return;				}								if(login.mState.code == 0){					Login user = login.mLogin;										if(user != null){						Intent intent = new Intent(mContext, ChatMainActivity.class);						user.mIsRoom = 100;						intent.putExtra("data", user);						startActivity(intent);//						DemandActivity.this.finish();					}				} else {					Toast.makeText(mContext, login.mState.errorMsg,Toast.LENGTH_LONG).show();				}				break;						case MSG_DEMAND_ADDED:				Demand demand = (Demand) msg.obj;								if (demand != null) {					WeiYuanState state = demand.state;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						mList.add(demand);						mAdapter.notifyDataSetChanged();						showFooter();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;							case MSG_DEMAND_LIST:				DemandList list = (DemandList) msg.obj;								if (list != null) {					mList.clear();					WeiYuanState state = list.mState;					if(state == null){						Toast.makeText(mContext, R.string.commit_data_error,Toast.LENGTH_LONG).show();						return;					}										if(state.code == 0){						if (list.mList != null && list.mList.size() > 0) {							mList.addAll(list.mList);						}						showData();					} else {						Toast.makeText(mContext, state.errorMsg,Toast.LENGTH_LONG).show();					}				}				break;							default:				break;			}		}	};	@Override	public void onClick(View v) {		super.onClick(v);		switch (v.getId()) {		case R.id.left_btn:			this.finish();			break;		case R.id.search_btn:			DemandSearchDialog dialog = new DemandSearchDialog(mContext, mList);			dialog.show();			break;		case R.id.add_btn:			Intent intent = new Intent();			intent.setClass(mContext, ShopOrderRetreatActivity.class);			intent.putExtra("openMode", 2);			startActivityForResult(intent, REQUEST_ADD_DEMAND);			break;		default:			break;		}	}	protected void showData() {		mAdapter = new DemandAdapter(mContext, mList);		mListView.setAdapter(mAdapter);		showFooter();			}	private void showFooter() {		if (mList.size() == 0) {			mListFooter.setVisibility(View.GONE);		} else {			mListFooter.setVisibility(View.VISIBLE);			mFooterText.setText(String.format("%d项需求", mList.size()));		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);		switch (requestCode) {		case REQUEST_ADD_DEMAND:			if (resultCode == RESULT_OK) {				if (data != null) {					String content = data.getStringExtra("reason");										if (content != null) {						addDemand(content);					}				}			}			break;		default:			break;		}	}	private void addDemand(final String content) {		if (!WeiYuanCommon.getNetWorkState()) {			mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);			return;		}		new Thread(){			public void run() {				try {					Demand temp = WeiYuanCommon.getWeiYuanInfo().addDemand(							content,							String.valueOf(WeiYuanCommon.getCurrentLat(mContext)),							String.valueOf(WeiYuanCommon.getCurrentLng(mContext)));					WeiYuanCommon.sendMsg(mHandler, MSG_DEMAND_ADDED, temp);				} catch (WeiYuanException e) {					e.printStackTrace();					WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 							mContext.getResources().getString(e.getStatusCode()));				} catch (Exception e) {					e.printStackTrace();				}			};		}.start();			}	@Override	public void onItemClick(AdapterView<?> listView, View convertView, int position, long uid) {		beginChatWithUid(uid);	}	private void beginChatWithUid(final long uid) {		if (uid > 0) {			if (!WeiYuanCommon.getNetWorkState()) {				mBaseHandler.sendEmptyMessage(BASE_MSG_NETWORK_ERROR);				return;			}			new Thread(){				public void run() {					try {						LoginResult user = WeiYuanCommon.getWeiYuanInfo().getUserInfo(String.valueOf(uid).toString());						WeiYuanCommon.sendMsg(mHandler, GlobalParam.MSG_GET_CONTACT_DATA, user);					} catch (WeiYuanException e) {						e.printStackTrace();						WeiYuanCommon.sendMsg(mBaseHandler, BASE_MSG_TIMEOUT_ERROR, 								mContext.getResources().getString(e.getStatusCode()));					} catch (Exception e) {						e.printStackTrace();					}				};			}.start();		}	}}