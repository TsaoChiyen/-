package com.chengxin.dialog;import java.util.ArrayList;import java.util.List;import android.app.Dialog;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.text.Editable;import android.text.TextWatcher;import android.view.MotionEvent;import android.view.View;import android.view.inputmethod.InputMethodManager;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.Button;import android.widget.EditText;import android.widget.GridView;import android.widget.Toast;import com.chengxin.ChatMainActivity;import com.chengxin.R;import com.chengxin.Entity.Goods;import com.chengxin.Entity.Login;import com.chengxin.Entity.LoginResult;import com.chengxin.adapter.GridGoodsAdapter;import com.chengxin.global.GlobalParam;public class SearchGoodsDialog extends Dialog implements OnItemClickListener,		android.view.View.OnClickListener {	public interface OnSearchGoodsClickListener {		public void onSearchGoodsClickListener(int sourcePosition);	}	private List<Goods> mSourceList;	private Context mContext;	private Button mCancleBtn;	private ArrayList<Goods> mSearchList;	private ArrayList<Integer> mListPos;	private EditText mContentEdit;	protected GridView mGridView;	private GridGoodsAdapter mAdapter;	private OnSearchGoodsClickListener mListener = null;	public void setOnSearchGoodsClickListener(OnSearchGoodsClickListener l) {		mListener = l;	}	public SearchGoodsDialog(Context context, List<Goods> list) {		super(context, R.style.ContentOverlay);		mSourceList = list;		mContext = context;	}	public SearchGoodsDialog(Context context) {		super(context, R.style.ContentOverlay);		mContext = context;	}	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.goods_search_dialog);		initComponent();	}	private void initComponent() {		mCancleBtn = (Button) findViewById(R.id.cancle_btn);		mCancleBtn.setOnClickListener(this);		mSearchList = new ArrayList<Goods>();		mListPos = new ArrayList<Integer>();		mContentEdit = (EditText) findViewById(R.id.searchcontent);		mContentEdit.addTextChangedListener(new TextWatcher() {			@Override			public void onTextChanged(CharSequence s, int start, int before,					int count) {			}			@Override			public void beforeTextChanged(CharSequence s, int start, int count,					int after) {			}			@Override			public void afterTextChanged(Editable s) {				String src = s.toString();				if (mSourceList == null || mSourceList.size() <= 0) {					return;				}				List<Goods> tempList = new ArrayList<Goods>();				List<Integer> indexList = new ArrayList<Integer>();				if (src != null && !src.equals("")) {					for (int i = 0; i < mSourceList.size(); i++) {						String name = mSourceList.get(i).name;						String barcode = mSourceList.get(i).barcode;						String introduce = mSourceList.get(i).introduce;						if (name != null && !name.equals("")								&& name.contains(src)) {							tempList.add(mSourceList.get(i));							indexList.add(new Integer(i));						} else if (barcode != null && !barcode.equals("")								&& barcode.contains(src)) {							tempList.add(mSourceList.get(i));							indexList.add(new Integer(i));						} else if (introduce != null && !introduce.equals("")								&& introduce.contains(src)) {							tempList.add(mSourceList.get(i));							indexList.add(new Integer(i));						}					}				}				if (mSearchList != null) {					mSearchList.clear();				}				if (mListPos != null) {					mListPos.clear();				}				mSearchList.addAll(tempList);				mListPos.addAll(indexList);				updateListView();				if (mSearchList != null && mSearchList.size() > 0) {					mGridView.setVisibility(View.VISIBLE);				} else {					mGridView.setVisibility(View.GONE);				}			}		});		mGridView = (GridView) findViewById(R.id.goods_grid);		mGridView.setVisibility(View.GONE);		mGridView.setCacheColorHint(0);		mGridView.setOnItemClickListener(this);		// mGridView.setSelector(mContext.getResources().getDrawable(R.drawable.transparent_selector));	}	private void updateListView() {		if (mSearchList != null && mSearchList.size() != 0) {			mGridView.setVisibility(View.VISIBLE);		}		if (mAdapter != null) {			mAdapter.notifyDataSetChanged();			return;		} else if (mSearchList != null) {			mAdapter = new GridGoodsAdapter(mContext, mSearchList);			mGridView.setAdapter(mAdapter);		}	}	@Override	public void onItemClick(AdapterView<?> listView, View convertView,			int position, long uid) {		if (mListener != null) {			mListener.onSearchGoodsClickListener(mListPos.get(position)					.intValue());		}		SearchGoodsDialog.this.dismiss();	}	@Override	public void onClick(View v) {		SearchGoodsDialog.this.dismiss();	}	private void hideKeyBoard() {		if (getCurrentFocus() != null				&& getCurrentFocus().getWindowToken() != null) {			InputMethodManager manager = (InputMethodManager) mContext					.getSystemService(Context.INPUT_METHOD_SERVICE);			manager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),					InputMethodManager.HIDE_NOT_ALWAYS);		}	}	@Override	public boolean onTouchEvent(MotionEvent event) {		if (event.getAction() == MotionEvent.ACTION_DOWN) {			if (mSearchList == null || mSearchList.size() <= 0) {				hideKeyBoard();				SearchGoodsDialog.this.dismiss();			}		}		return super.onTouchEvent(event);	}	protected Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case GlobalParam.MSG_GET_CONTACT_DATA:				LoginResult login = (LoginResult) msg.obj;				if (login == null) {					Toast.makeText(mContext, R.string.commit_data_error,							Toast.LENGTH_LONG).show();					return;				}				if (login.mState.code == 0) {					Login user = login.mLogin;					if (user != null) {						Intent intent = new Intent(mContext,								ChatMainActivity.class);						user.mIsRoom = 100;						intent.putExtra("data", user);						mContext.startActivity(intent);						SearchGoodsDialog.this.dismiss();					}				} else {					Toast.makeText(mContext, login.mState.errorMsg,							Toast.LENGTH_LONG).show();				}				break;			default:				break;			}		}	};}